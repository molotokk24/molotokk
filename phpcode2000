<?php
/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ª–∞–º–∏–Ω–∞—Ç–∞ "–î—É–± –ê–ø—É–ª–∏—è"

class LaminateProduct {
    private $productData;
    private $additionalInfo;
    
    public function __construct() {
        $this->initializeProductData();
    }
    
    private function initializeProductData() {
        $this->productData = [
            'title' => '–õ–∞–º–∏–Ω–∞—Ç "–î—É–± –ê–ø—É–ª–∏—è"',
            'description' => '–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ–µ –Ω–∞–ø–æ–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏–¥–∞–µ—Ç –≤–∞—à–µ–º—É –∏–Ω—Ç–µ—Ä—å–µ—Ä—É –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –∏ —ç–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –≤–∏–¥. –°–æ–∑–¥–∞–µ—Ç —Ç–µ–ø–ª—É—é –∏ —É—é—Ç–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –≤ –≤–∞—à–µ–º –¥–æ–º–µ.',
            'features' => [
                'thickness' => ['label' => '–¢–æ–ª—â–∏–Ω–∞', 'value' => '8 –º–º', 'icon' => 'üìè'],
                'material' => ['label' => '–ú–∞—Ç–µ—Ä–∏–∞–ª', 'value' => '–í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –•–î–§', 'icon' => 'üå≥'],
                'installation' => ['label' => '–£–∫–ª–∞–¥–∫–∞', 'value' => '–°–∏—Å—Ç–µ–º–∞ –∑–∞–º–∫–æ–≤ –±–µ–∑ –ø—Ä–æ–ø–∏—Ç–∫–∏', 'icon' => 'üß©'],
                'area' => ['label' => '–ü–ª–æ—â–∞–¥—å –≤ —É–ø–∞–∫–æ–≤–∫–µ', 'value' => '2.22 –º¬≤', 'icon' => 'üì¶'],
                'wear_class' => ['label' => '–ö–ª–∞—Å—Å –∏–∑–Ω–æ—Å–æ—Å—Ç–æ–π–∫–æ—Å—Ç–∏', 'value' => '33 (–∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ)', 'icon' => 'üõ°Ô∏è'],
                'water_resistant' => ['label' => '–í–æ–¥–æ—Å—Ç–æ–π–∫–æ—Å—Ç—å', 'value' => false, 'icon' => 'üíß']
            ],
            'rooms' => [
                'suitable' => ['—Å–ø–∞–ª—å–Ω—è', '–≥–æ—Å—Ç–∏–Ω–∞—è', '–∫–æ—Ä–∏–¥–æ—Ä'],
                'not_suitable' => '–≤–∞–Ω–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã –∏ –¥—Ä—É–≥–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è —Å –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π –≤–ª–∞–∂–Ω–æ—Å—Ç—å—é'
            ],
            'design' => [
                'note' => '–ü–µ—Ä–µ–¥–∞–µ—Ç —Ä–∏—Å—É–Ω–æ–∫ –¥—Ä–µ–≤–µ—Å–∏–Ω—ã —Å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –≤–∞—Ä–∏–∞—Ü–∏—è–º–∏ –æ—Ç—Ç–µ–Ω–∫–æ–≤ –∏ —Å—É—á–∫–æ–≤',
                'tip' => '–ß–µ—Ä–µ–¥—É–π—Ç–µ –ø–∞–Ω–µ–ª–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –ø–∞—á–µ–∫ –¥–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤–∏–¥–∞'
            ]
        ];
        
        $this->additionalInfo = [
            'certificates' => '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –≤ –º–∞–≥–∞–∑–∏–Ω',
            'color_warning' => '–¶–≤–µ—Ç –Ω–∞ —ç–∫—Ä–∞–Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∏–∑-–∑–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞',
            'contact' => '–î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º'
        ];
    }
    
    public function renderProductPage() {
        $this->renderHTMLHeader();
        $this->renderProductHeader();
        $this->renderFeaturesSection();
        $this->renderUsageRecommendations();
        $this->renderDesignFeatures();
        $this->renderAdditionalInfo();
        $this->renderFooter();
    }
    
    private function renderHTMLHeader() {
        ?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="<?= htmlspecialchars($this->productData['description']) ?>">
    <title><?= htmlspecialchars($this->productData['title']) ?> | –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #34495e;
            --accent-color: #e74c3c;
            --light-bg: #f9f9f9;
            --text-color: #333;
            --muted-text: #7f8c8d;
        }
        
        body {
            font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.5;
            color: var(--text-color);
            max-width: 902px;
            margin: 0 auto;
            padding: 21px;
            background-color: #fff;
        }
        
        h1, h2 {
            color: var(--primary-color);
            margin-top: 1.6em;
        }
        
        h1 {
            border-bottom: 2px solid var(--primary-color);
            padding-bottom: 11px;
        }
        
        .feature-card {
            background-color: var(--light-bg);
            padding: 21px;
            border-radius: 8px;
            margin-bottom: 21px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        
        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 15px;
            margin-top: 15px;
        }
        
        .feature-item {
            display: flex;
            align-items: flex-start;
            gap: 10px;
            padding: 10px;
        }
        
        .feature-icon {
            font-size: 1.3em;
            margin-top: 3px;
        }
        
        .warning {
            color: var(--accent-color);
            font-weight: 600;
            background-color: rgba(231, 76, 60, 0.1);
            padding: 10px;
            border-radius: 5px;
            display: inline-block;
        }
        
        .note {
            font-style: italic;
            color: var(--muted-text);
            border-left: 3px solid var(--muted-text);
            padding-left: 10px;
        }
        
        .tag {
            display: inline-block;
            background-color: var(--secondary-color);
            color: white;
            padding: 3px 7px;
            border-radius: 3px;
            font-size: 0.8em;
            margin-right: 4px;
        }
        
        footer {
            margin-top: 41px;
            padding-top: 22px;
            border-top: 1px solid #eee;
            color: var(--muted-text);
            font-size: 0.9em;
        }
        
        @media (max-width: 603px) {
            .feature-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
        <?php
    }
    
    private function renderProductHeader() {
        ?>
        <h1><?= htmlspecialchars($this->productData['title']) ?></h1>
        <p><?= htmlspecialchars($this->productData['description']) ?></p>
        <?php
    }
    
    private function renderFeaturesSection() {
        ?>
        <h2><i class="fas fa-list-check"></i> –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h2>
        <div class="feature-card">
            <div class="feature-grid">
                <?php foreach ($this->productData['features'] as $feature): ?>
                <div class="feature-item">
                    <span class="feature-icon"><?= $feature['icon'] ?></span>
                    <div>
                        <strong><?= htmlspecialchars($feature['label']) ?>:</strong><br>
                        <?= is_bool($feature['value']) ? 
                            ($feature['value'] ? '–î–∞' : '–ù–µ—Ç') : 
                            htmlspecialchars($feature['value']) ?>
                    </div>
                </div>
                <?php endforeach; ?>
            </div>
        </div>
        <?php
    }
    
    private function renderUsageRecommendations() {
        ?>
        <h2><i class="fas fa-home"></i> –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é</h2>
        <p>–ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è: 
            <?php foreach ($this->productData['rooms']['suitable'] as $room): ?>
                <span class="tag"><?= htmlspecialchars($room) ?></span>
            <?php endforeach; ?>
        </p>
        <p class="warning">
            <i class="fas fa-exclamation-triangle"></i> 
            –ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è: <?= htmlspecialchars($this->productData['rooms']['not_suitable']) ?>
        </p>
        <?php
    }
    
    private function renderDesignFeatures() {
        ?>
        <h2><i class="fas fa-palette"></i> –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–∏–∑–∞–π–Ω–∞</h2>
        <p><?= htmlspecialchars($this->productData['design']['note']) ?></p>
        <p class="note">
            <i class="fas fa-lightbulb"></i> 
            <?= htmlspecialchars($this->productData['design']['tip']) ?>
        </p>
        <?php
    }
    
    private function renderAdditionalInfo() {
        ?>
        <h2><i class="fas fa-info-circle"></i> –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
        <p><?= htmlspecialchars($this->additionalInfo['certificates']) ?></p>
        <p class="note"><?= htmlspecialchars($this->additionalInfo['color_warning']) ?></p>
        <p><i class="fas fa-phone"></i> <?= htmlspecialchars($this->additionalInfo['contact']) ?></p>
        <?php
    }
    
    private function renderFooter() {
        ?>
        <footer>
            <p>¬© <?= date('Y') ?> –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
        </footer>
</body>
</html>
        <?php
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
$laminatePage = new LaminateProduct();
$laminatePage->renderProductPage();
?>
<?php
/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ª–∞–º–∏–Ω–∞—Ç–∞ Artens "–°–æ—Å–Ω–∞ –∫–∞–Ω–∞–¥—Å–∫–∞—è —Å–≤–µ—Ç–ª–∞—è"
 * 
 * 
 * 
 */

class LaminateProduct {
    private $productData;
    private $additionalInfo;
    
    public function __construct() {
        $this->initializeProductData();
    }
    
    private function initializeProductData() {
        $this->productData = [
            'title' => '–õ–∞–º–∏–Ω–∞—Ç Artens "–°–æ—Å–Ω–∞ –∫–∞–Ω–∞–¥—Å–∫–∞—è —Å–≤–µ—Ç–ª–∞—è"',
            'description' => '–í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –Ω–∞–ø–æ–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –¥–ª—è –∂–∏–ª—ã—Ö –∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø–æ–º–µ—â–µ–Ω–∏–π —Å –≤—ã—Å–æ–∫–æ–π –ø—Ä–æ—Ö–æ–¥–∏–º–æ—Å—Ç—å—é. –ú–∞—Ç–æ–≤–∞—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å —Å —Ç–µ–∫—Å—Ç—É—Ä–æ–π –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–π –¥—Ä–µ–≤–µ—Å–∏–Ω—ã.',
            'features' => [
                'class' => ['label' => '–ö–ª–∞—Å—Å —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏', 'value' => '33 (–∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ)', 'icon' => 'üõ°Ô∏è'],
                'material' => ['label' => '–ú–∞—Ç–µ—Ä–∏–∞–ª', 'value' => '–•–î–§', 'icon' => 'üå≥'],
                'surface' => ['label' => '–ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å', 'value' => '–ú–∞—Ç–æ–≤–∞—è', 'icon' => '‚ú®'],
                'size' => ['label' => '–†–∞–∑–º–µ—Ä –ø–∞–Ω–µ–ª–∏', 'value' => '129,2 √ó 19,3 —Å–º', 'icon' => 'üìè'],
                'thickness' => ['label' => '–¢–æ–ª—â–∏–Ω–∞', 'value' => '8 –º–º', 'icon' => 'üìê'],
                'package' => ['label' => '–ü–∞–Ω–µ–ª–µ–π –≤ —É–ø–∞–∫–æ–≤–∫–µ', 'value' => '8 —à—Ç (1,9948 –º¬≤)', 'icon' => 'üì¶'],
                'weight' => ['label' => '–í–µ—Å —É–ø–∞–∫–æ–≤–∫–∏', 'value' => '14,54 –∫–≥', 'icon' => '‚öñÔ∏è'],
                'heating' => ['label' => '–¢–µ–ø–ª—ã–π –ø–æ–ª', 'value' => '–î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –¥–æ +28¬∞C', 'icon' => 'üî•'],
                'country' => ['label' => '–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ', 'value' => '–†–æ—Å—Å–∏—è', 'icon' => 'üá∑üá∫']
            ],
            'advantages' => [
                '–ë—ã—Å—Ç—Ä—ã–π –º–æ–Ω—Ç–∞–∂ –±–µ–∑ –∫–ª–µ—è –±–ª–∞–≥–æ–¥–∞—Ä—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º –∑–∞–º–∫–∞–º',
                '–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è —Ç–µ–∫—Å—Ç—É—Ä–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–π –¥—Ä–µ–≤–µ—Å–∏–Ω—ã',
                '–í—ã—Å–æ–∫–∞—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∫ –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–º –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è–º',
                '–î–æ–ª–≥–∏–π —Å—Ä–æ–∫ —Å–ª—É–∂–±—ã –¥–∞–∂–µ –ø—Ä–∏ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ'
            ],
            'design' => [
                'note' => '–ü–µ—Ä–µ–¥–∞–µ—Ç —Ä–∏—Å—É–Ω–æ–∫ –¥—Ä–µ–≤–µ—Å–∏–Ω—ã —Å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –≤–∞—Ä–∏–∞—Ü–∏—è–º–∏ –æ—Ç—Ç–µ–Ω–∫–æ–≤ –∏ —Å—É—á–∫–æ–≤',
                'tip' => '–ß–µ—Ä–µ–¥—É–π—Ç–µ –ø–∞–Ω–µ–ª–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –ø–∞—á–µ–∫ –¥–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤–∏–¥–∞'
            ]
        ];
        
        $this->additionalInfo = [
            'certificates' => '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –≤ –º–∞–≥–∞–∑–∏–Ω',
            'color_warning' => '–¶–≤–µ—Ç –Ω–∞ —ç–∫—Ä–∞–Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∏–∑-–∑–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞',
            'contact' => '–î–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –º–æ–Ω—Ç–∞–∂—É –∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º'
        ];
    }
    
    public function renderProductPage() {
        $this->renderHTMLHeader();
        $this->renderProductHeader();
        $this->renderFeaturesSection();
        $this->renderAdvantages();
        $this->renderDesignFeatures();
        $this->renderAdditionalInfo();
        $this->renderFooter();
    }
    
    private function renderHTMLHeader() {
        ?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="<?= htmlspecialchars($this->productData['description']) ?>">
    <title><?= htmlspecialchars($this->productData['title']) ?> | –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #34495e;
            --accent-color: #e67e22;
            --light-bg: #f9f9f9;
            --text-color: #333;
            --muted-text: #7f8c8d;
        }
        
        body {
            font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            max-width: 900px;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
        }
        
        h1, h2 {
            color: var(--primary-color);
            margin-top: 1.5em;
        }
        
        h1 {
            border-bottom: 2px solid var(--primary-color);
            padding-bottom: 10px;
        }
        
        .feature-card {
            background-color: var(--light-bg);
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        
        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 15px;
            margin-top: 15px;
        }
        
        .feature-item {
            display: flex;
            align-items: flex-start;
            gap: 10px;
            padding: 10px;
        }
        
        .feature-icon {
            font-size: 1.2em;
            margin-top: 3px;
        }
        
        .advantages-list {
            margin: 20px 0;
            padding-left: 20px;
        }
        
        .advantages-list li {
            margin-bottom: 11px;
            position: relative;
            padding-left: 24px;
        }
        
        .advantages-list li:before {
            content: "‚úì";
            color: var(--accent-color);
            position: absolute;
            left: 0;
            font-weight: bold;
        }
        
        .note {
            font-style: italic;
            color: var(--muted-text);
            border-left: 3px solid var(--muted-text);
            padding-left: 11px;
        }
        
        footer {
            margin-top: 40px;
            padding-top: 20px;
            border-top: 1px solid #eee;
            color: var(--muted-text);
            font-size: 0.9em;
        }
        
        @media (max-width: 600px) {
            .feature-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
        <?php
    }
    
    private function renderProductHeader() {
        ?>
        <h1><?= htmlspecialchars($this->productData['title']) ?></h1>
        <p><?= htmlspecialchars($this->productData['description']) ?></p>
        <?php
    }
    
    private function renderFeaturesSection() {
        ?>
        <h2><i class="fas fa-list-check"></i> –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h2>
        <div class="feature-card">
            <div class="feature-grid">
                <?php foreach ($this->productData['features'] as $feature): ?>
                <div class="feature-item">
                    <span class="feature-icon"><?= $feature['icon'] ?></span>
                    <div>
                        <strong><?= htmlspecialchars($feature['label']) ?>:</strong><br>
                        <?= is_bool($feature['value']) ? 
                            ($feature['value'] ? '–î–∞' : '–ù–µ—Ç') : 
                            htmlspecialchars($feature['value']) ?>
                    </div>
                </div>
                <?php endforeach; ?>
            </div>
        </div>
        <?php
    }
    
    private function renderAdvantages() {
        ?>
        <h2><i class="fas fa-star"></i> –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</h2>
        <ul class="advantages-list">
            <?php foreach ($this->productData['advantages'] as $advantage): ?>
                <li><?= htmlspecialchars($advantage) ?></li>
            <?php endforeach; ?>
        </ul>
        <?php
    }
    
    private function renderDesignFeatures() {
        ?>
        <h2><i class="fas fa-palette"></i> –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–∏–∑–∞–π–Ω–∞</h2>
        <p><?= htmlspecialchars($this->productData['design']['note']) ?></p>
        <p class="note">
            <i class="fas fa-lightbulb"></i> 
            <?= htmlspecialchars($this->productData['design']['tip']) ?>
        </p>
        <?php
    }
    
    private function renderAdditionalInfo() {
        ?>
        <h2><i class="fas fa-info-circle"></i> –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
        <p><?= htmlspecialchars($this->additionalInfo['certificates']) ?></p>
        <p class="note"><?= htmlspecialchars($this->additionalInfo['color_warning']) ?></p>
        <p><i class="fas fa-phone"></i> <?= htmlspecialchars($this->additionalInfo['contact']) ?></p>
        <?php
    }
    
    private function renderFooter() {
        ?>
        <footer>
            <p>¬© <?= date('Y') ?> –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
        </footer>
</body>
</html>
        <?php
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
$laminatePage = new LaminateProduct();
$laminatePage->renderProductPage();
?>

<?php
/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ª–∞–º–∏–Ω–∞—Ç–∞ "–î—É–± –û—Ä–∏—è"
 * 
 * 
 *
 */

class LaminateProduct {
    private $productData;
    private $additionalInfo;
    
    public function __construct() {
        $this->initializeProductData();
    }
    
    private function initializeProductData() {
        $this->productData = [
            'title' => '–õ–∞–º–∏–Ω–∞—Ç "–î—É–± –û—Ä–∏—è"',
            'description' => '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –Ω–∞–ø–æ–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –¥–ª—è –∂–∏–ª—ã—Ö –∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø–æ–º–µ—â–µ–Ω–∏–π —Å —ç—Ñ—Ñ–µ–∫—Ç–Ω–æ–π –∏–º–∏—Ç–∞—Ü–∏–µ–π –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞. –õ–µ–≥–∫–∏–π –º–æ–Ω—Ç–∞–∂ –∏ –ø—Ä–æ—Å—Ç–æ–π —É—Ö–æ–¥.',
            'features' => [
                'class' => ['label' => '–ö–ª–∞—Å—Å –∏–∑–Ω–æ—Å–æ—Å—Ç–æ–π–∫–æ—Å—Ç–∏', 'value' => '33', 'icon' => 'üõ°Ô∏è'],
                'panels' => ['label' => '–ü–ª–∞—à–µ–∫ –≤ —É–ø–∞–∫–æ–≤–∫–µ', 'value' => '8 —à—Ç', 'icon' => 'üì¶'],
                'thickness' => ['label' => '–¢–æ–ª—â–∏–Ω–∞', 'value' => '8 –º–º', 'icon' => 'üìè'],
                'area' => ['label' => '–ü–ª–æ—â–∞–¥—å –ø–æ–∫—Ä—ã—Ç–∏—è', 'value' => '2.131 –º¬≤', 'icon' => 'üìê'],
                'material' => ['label' => '–ú–∞—Ç–µ—Ä–∏–∞–ª', 'value' => '–î—Ä–µ–≤–µ—Å–Ω–æ-–≤–æ–ª–æ–∫–Ω–∏—Å—Ç–∞—è –ø–ª–∏—Ç–∞ –≤—ã—Å–æ–∫–æ–π –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏', 'icon' => 'üå≥'],
                'surface' => ['label' => '–ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å', 'value' => '–ó–∞—â–∏—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ —Å –¥–µ–∫–æ—Ä–æ–º –ø–æ–¥ –¥–µ—Ä–µ–≤–æ', 'icon' => '‚ú®']
            ],
            'advantages' => [
                '–ë—ã—Å—Ç—Ä—ã–π –∏ –ø—Ä–æ—Å—Ç–æ–π –º–æ–Ω—Ç–∞–∂',
                '–£—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∫ —É–¥–∞—Ä–Ω—ã–º –Ω–∞–≥—Ä—É–∑–∫–∞–º –∏ –∏—Å—Ç–∏—Ä–∞–Ω–∏—é',
                '–ì–∏–≥–∏–µ–Ω–∏—á–Ω–æ—Å—Ç—å - —Å—Ç—ã–∫–∏ –Ω–µ —Å–æ–±–∏—Ä–∞—é—Ç –≥—Ä—è–∑—å',
                '–ù–µ —Ç—Ä–µ–±—É–µ—Ç —Ü–∏–∫–ª–µ–≤–∫–∏ –∏ –ø–æ–ª–∏—Ä–æ–≤–∫–∏',
                '–≠—Ñ—Ñ–µ–∫—Ç–Ω–∞—è –∏–º–∏—Ç–∞—Ü–∏—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞',
                '–ü—Ä–æ—Å—Ç–æ—Ç–∞ –≤ —É—Ö–æ–¥–µ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏'
            ],
            'usage' => [
                '–ñ–∏–ª—ã–µ –∫–æ–º–Ω–∞—Ç—ã',
                '–ö–æ—Ä–∏–¥–æ—Ä—ã',
                '–ü–æ–º–µ—â–µ–Ω–∏—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è'
            ],
            'design' => [
                'note' => '–ü–µ—Ä–µ–¥–∞–µ—Ç —Ä–∏—Å—É–Ω–æ–∫ –¥—Ä–µ–≤–µ—Å–∏–Ω—ã —Å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –≤–∞—Ä–∏–∞—Ü–∏—è–º–∏ –æ—Ç—Ç–µ–Ω–∫–æ–≤ –∏ —Å—É—á–∫–æ–≤',
                'tip' => '–ß–µ—Ä–µ–¥—É–π—Ç–µ –ø–∞–Ω–µ–ª–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –ø–∞—á–µ–∫ –¥–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤–∏–¥–∞'
            ]
        ];
        
        $this->additionalInfo = [
            'certificates' => '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∫–∞—á–µ—Å—Ç–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É',
            'color_warning' => '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ –º–æ–∂–µ—Ç –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞',
            'contact' => '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –ø–æ–¥–±–æ—Ä—É –∏ –º–æ–Ω—Ç–∞–∂—É: +7 (919) 062-05-19'
        ];
    }
    
    public function renderProductPage() {
        $this->renderHTMLHeader();
        $this->renderProductHeader();
        $this->renderFeaturesSection();
        $this->renderUsageSection();
        $this->renderAdvantages();
        $this->renderDesignFeatures();
        $this->renderAdditionalInfo();
        $this->renderFooter();
    }
    
    private function renderHTMLHeader() {
        ?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="<?= htmlspecialchars($this->productData['description']) ?>">
    <title><?= htmlspecialchars($this->productData['title']) ?> | –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #5d4037;
            --secondary-color: #8d6e63;
            --accent-color: #a1887f;
            --light-bg: #f5f5f5;
            --text-color: #333;
            --muted-text: #757575;
        }
        
        body {
            font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            max-width: 900px;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
        }
        
        h1, h2 {
            color: var(--primary-color);
            margin-top: 1.5em;
        }
        
        h1 {
            border-bottom: 2px solid var(--primary-color);
            padding-bottom: 10px;
        }
        
        .feature-card {
            background-color: var(--light-bg);
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        
        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 15px;
            margin-top: 15px;
        }
        
        .feature-item {
            display: flex;
            align-items: flex-start;
            gap: 10px;
            padding: 10px;
        }
        
        .feature-icon {
            font-size: 1.2em;
            margin-top: 3px;
            color: var(--secondary-color);
        }
        
        .advantages-list {
            margin: 20px 0;
            padding-left: 20px;
        }
        
        .advantages-list li {
            margin-bottom: 10px;
            position: relative;
            padding-left: 25px;
        }
        
        .advantages-list li:before {
            content: "‚Ä¢";
            color: var(--accent-color);
            position: absolute;
            left: 0;
            font-weight: bold;
            font-size: 1.2em;
        }
        
        .usage-tags {
            margin: 15px 0;
        }
        
        .tag {
            display: inline-block;
            background-color: var(--secondary-color);
            color: white;
            padding: 5px 10px;
            border-radius: 4px;
            font-size: 0.9em;
            margin-right: 8px;
            margin-bottom: 8px;
        }
        
        .note {
            font-style: italic;
            color: var(--muted-text);
            border-left: 3px solid var(--muted-text);
            padding-left: 12px;
            margin: 15px 0;
        }
        
        footer {
            margin-top: 40px;
            padding-top: 20px;
            border-top: 1px solid #eee;
            color: var(--muted-text);
            font-size: 0.9em;
        }
        
        @media (max-width: 600px) {
            .feature-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
        <?php
    }
    
    private function renderProductHeader() {
        ?>
        <h1><?= htmlspecialchars($this->productData['title']) ?></h1>
        <p><?= htmlspecialchars($this->productData['description']) ?></p>
        <?php
    }
    
    private function renderFeaturesSection() {
        ?>
        <h2><i class="fas fa-ruler-combined"></i> –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h2>
        <div class="feature-card">
            <div class="feature-grid">
                <?php foreach ($this->productData['features'] as $feature): ?>
                <div class="feature-item">
                    <span class="feature-icon"><?= $feature['icon'] ?></span>
                    <div>
                        <strong><?= htmlspecialchars($feature['label']) ?>:</strong><br>
                        <?= is_bool($feature['value']) ? 
                            ($feature['value'] ? '–î–∞' : '–ù–µ—Ç') : 
                            htmlspecialchars($feature['value']) ?>
                    </div>
                </div>
                <?php endforeach; ?>
            </div>
        </div>
        <?php
    }
    
    private function renderUsageSection() {
        ?>
        <h2><i class="fas fa-map-marker-alt"></i> –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø–æ–º–µ—â–µ–Ω–∏—è</h2>
        <div class="usage-tags">
            <?php foreach ($this->productData['usage'] as $room): ?>
                <span class="tag"><?= htmlspecialchars($room) ?></span>
            <?php endforeach; ?>
        </div>
        <?php
    }
    
    private function renderAdvantages() {
        ?>
        <h2><i class="fas fa-award"></i> –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</h2>
        <ul class="advantages-list">
            <?php foreach ($this->productData['advantages'] as $advantage): ?>
                <li><?= htmlspecialchars($advantage) ?></li>
            <?php endforeach; ?>
        </ul>
        <?php
    }
    
    private function renderDesignFeatures() {
        ?>
        <h2><i class="fas fa-paint-brush"></i> –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–∏–∑–∞–π–Ω–∞</h2>
        <p><?= htmlspecialchars($this->productData['design']['note']) ?></p>
        <p class="note">
            <i class="fas fa-info-circle"></i> 
            <?= htmlspecialchars($this->productData['design']['tip']) ?>
        </p>
        <?php
    }
    
    private function renderAdditionalInfo() {
        ?>
        <h2><i class="fas fa-question-circle"></i> –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
        <p><?= htmlspecialchars($this->additionalInfo['certificates']) ?></p>
        <p class="note"><?= htmlspecialchars($this->additionalInfo['color_warning']) ?></p>
        <p><i class="fas fa-phone-alt"></i> <?= htmlspecialchars($this->additionalInfo['contact']) ?></p>
        <?php
    }
    
    private function renderFooter() {
        ?>
        <footer>
            <p>¬© <?= date('Y') ?> –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã. –õ–∞–º–∏–Ω–∞—Ç "–î—É–± –û—Ä–∏—è" - –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –Ω–∞–ø–æ–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –æ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è.</p>
        </footer>
</body>
</html>
        <?php
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
$laminatePage = new LaminateProduct();
$laminatePage->renderProductPage();
?>
<?php
/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ö–≤–æ–π–Ω–æ–π –ø–æ–¥–ª–æ–∂–∫–∏ 3 –º–º
 * 
 * 
 * 
 */

class UnderlayProduct {
    private $productData;
    private $technicalSpecs;
    private $additionalInfo;
    
    public function __construct() {
        $this->initializeProductData();
    }
    
    private function initializeProductData() {
        $this->productData = [
            'title' => '–ó–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏–æ–Ω–Ω–∞—è —Ö–≤–æ–π–Ω–∞—è –ø–æ–¥–ª–æ–∂–∫–∞ 3 –º–º',
            'description' => '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–ª–æ–∂–∫–∞ –ø–æ–¥ –Ω–∞–ø–æ–ª—å–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–π —Ö–≤–æ–∏. –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∞–∫—É—Å—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º—Ñ–æ—Ä—Ç, —Ç–µ–ø–ª–æ–∏–∑–æ–ª—è—Ü–∏—é –∏ –∑–∞—â–∏—Ç—É –ø–æ–ª–∞.',
            'features' => [
                'thickness' => ['label' => '–¢–æ–ª—â–∏–Ω–∞', 'value' => '3 –º–º', 'icon' => 'üìè'],
                'area' => ['label' => '–ü–ª–æ—â–∞–¥—å —Ä—É–ª–æ–Ω–∞', 'value' => '7 –º¬≤', 'icon' => 'üìê'],
                'density' => ['label' => '–ü–ª–æ—Ç–Ω–æ—Å—Ç—å', 'value' => '250 –∫–≥/–º¬≥', 'icon' => '‚öñÔ∏è'],
                'load' => ['label' => '–ù–∞–≥—Ä—É–∑–∫–∞', 'value' => '15 —Ç–æ–Ω–Ω/–º¬≤ (PSI)', 'icon' => 'üèãÔ∏è'],
                'material' => ['label' => '–°–æ—Å—Ç–∞–≤', 'value' => '–•–≤–æ–π–Ω—ã–µ –¥—Ä–µ–≤–µ—Å–Ω—ã–µ –≤–æ–ª–æ–∫–Ω–∞', 'icon' => 'üå≤'],
                'lifetime' => ['label' => '–°—Ä–æ–∫ —Å–ª—É–∂–±—ã', 'value' => '30+ –ª–µ—Ç', 'icon' => '‚è≥'],
                'noise_reduction' => ['label' => '–°–Ω–∏–∂–µ–Ω–∏–µ —É–¥–∞—Ä–Ω–æ–≥–æ —à—É–º–∞', 'value' => 'ŒîIIC 25 dB', 'icon' => 'üîá'],
                'thermal_resistance' => ['label' => '–¢–µ—Ä–º–æ—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ', 'value' => 'R=0,1 –º¬≤¬∑–ö/–í—Ç', 'icon' => 'üå°Ô∏è']
            ],
            'advantages' => [
                '–£—Å—Ç—Ä–∞–Ω—è–µ—Ç "–ø–ª–∞–≤–∞—é—â–∏–π" —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ —Ö–æ–¥—å–±–µ',
                '–ó–∞—â–∏—â–∞–µ—Ç –∑–∞–º–∫–æ–≤—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –æ—Ç –ø–æ–ª–æ–º–∫–∏',
                '–í—ã—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –º–µ–ª–∫–∏–µ –Ω–µ—Ä–æ–≤–Ω–æ—Å—Ç–∏ –æ—Å–Ω–æ–≤–∞–Ω–∏—è',
                '–¢–µ–ø–ª–æ–∏–∑–æ–ª—è—Ü–∏—è (Œª=0,05 –í—Ç/(–º¬∑–ö))',
                '–ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –ø–ª–µ—Å–µ–Ω–∏ (Œº=5)',
                '–°–æ–≤–º–µ—Å—Ç–∏–º–∞ —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ "—Ç–µ–ø–ª—ã–π –ø–æ–ª"',
                '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è —à—É–º–æ–∏–∑–æ–ª—è—Ü–∏—è (–¥–æ 70%)',
                '–≠–∫–æ–ª–æ–≥–∏—á–Ω—ã–π –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª'
            ],
            'compatibility' => [
                '–õ–∞–º–∏–Ω–∞—Ç',
                'LVT-–ø–ª–∏—Ç–∫–∞',
                '–ò–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ –ø–æ–ª—ã',
                '–ü–∞—Ä–∫–µ—Ç–Ω–∞—è –¥–æ—Å–∫–∞',
                '–í—Å–µ "–ø–ª–∞–≤–∞—é—â–∏–µ" –ø–æ–∫—Ä—ã—Ç–∏—è'
            ],
            'dimensions' => [
                'width' => '590 –º–º',
                'length' => '790 –º–º',
                'package' => '1 —Ä—É–ª–æ–Ω'
            ]
        ];
        
        $this->technicalSpecs = [
            'acoustic' => [
                '–£–¥–∞—Ä–Ω—ã–π —à—É–º' => 'ŒîIIC 25 dB',
                '–í–æ–∑–¥—É—à–Ω—ã–π —à—É–º' => '–î–æ 70% —Å–Ω–∏–∂–µ–Ω–∏—è'
            ],
            'thermal' => [
                '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç–∏' => 'Œª=0,05 –í—Ç/(–º¬∑–ö)',
                '–¢–µ—Ä–º–∏—á–µ—Å–∫–æ–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ' => 'R=0,1 –º¬≤¬∑–ö/–í—Ç'
            ],
            'moisture' => [
                '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è –¥–∏—Ñ—Ñ—É–∑–∏–∏' => 'Œº=5',
                '–ó–∞—â–∏—Ç–∞ –æ—Ç –ø–ª–µ—Å–µ–Ω–∏' => '–î–∞'
            ]
        ];
        
        $this->additionalInfo = [
            'installation' => '–ú–æ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è –≤—Å—Ç—ã–∫ –±–µ–∑ –Ω–∞—Ö–ª–µ—Å—Ç–æ–≤',
            'warning' => '–ù–µ —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø–∞—Ä–æ–∏–∑–æ–ª—è—Ü–∏–∏',
            'application' => '–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ü–æ–∫–æ–ª—å–Ω—ã—Ö —ç—Ç–∞–∂–µ–π –∏ –º–µ–∂—ç—Ç–∞–∂–Ω—ã—Ö –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–π'
        ];
    }
    
    public function renderProductPage() {
        $this->renderHTMLHeader();
        $this->renderProductHeader();
        $this->renderFeaturesSection();
        $this->renderAdvantages();
        $this->renderCompatibility();
        $this->renderTechnicalSpecs();
        $this->renderAdditionalInfo();
        $this->renderFooter();
    }
    
    private function renderHTMLHeader() {
        ?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="<?= htmlspecialchars($this->productData['description']) ?>">
    <title><?= htmlspecialchars($this->productData['title']) ?> | –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #2e7d32;
            --secondary-color: #689f38;
            --accent-color: #8bc34a;
            --light-bg: #f1f8e9;
            --text-color: #263238;
            --muted-text: #546e7a;
        }
        
        body {
            font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            max-width: 1000px;
            margin: 0 auto;
            padding: 25px;
            background-color: #fff;
        }
        
        h1, h2, h3 {
            color: var(--primary-color);
            margin-top: 1.8em;
        }
        
        h1 {
            border-bottom: 2px solid var(--primary-color);
            padding-bottom: 12px;
            margin-bottom: 20px;
        }
        
        h2 {
            border-left: 4px solid var(--accent-color);
            padding-left: 12px;
        }
        
        .feature-card {
            background-color: var(--light-bg);
            padding: 25px;
            border-radius: 10px;
            margin-bottom: 25px;
            box-shadow: 0 3px 6px rgba(0,0,0,0.1);
        }
        
        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .feature-item {
            display: flex;
            align-items: center;
            gap: 15px;
            padding: 12px;
            background-color: rgba(255,255,255,0.7);
            border-radius: 6px;
        }
        
        .feature-icon {
            font-size: 1.5em;
            color: var(--secondary-color);
            min-width: 30px;
            text-align: center;
        }
        
        .advantages-list {
            margin: 25px 0;
            padding-left: 0;
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 15px;
        }
        
        .advantages-list li {
            margin-bottom: 12px;
            position: relative;
            padding-left: 35px;
            list-style: none;
        }
        
        .advantages-list li:before {
            content: "‚úì";
            color: var(--accent-color);
            position: absolute;
            left: 0;
            font-weight: bold;
            font-size: 1.3em;
        }
        
        .compatibility-tags {
            margin: 20px 0;
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }
        
        .tag {
            display: inline-block;
            background-color: var(--secondary-color);
            color: white;
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 0.95em;
        }
        
        .specs-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .specs-card {
            background-color: var(--light-bg);
            padding: 20px;
            border-radius: 8px;
        }
        
        .specs-card h3 {
            margin-top: 0;
            color: var(--secondary-color);
        }
        
        .specs-item {
            margin-bottom: 10px;
            display: flex;
            justify-content: space-between;
        }
        
        .specs-value {
            font-weight: bold;
            color: var(--primary-color);
        }
        
        .note {
            font-style: italic;
            color: var(--muted-text);
            border-left: 3px solid var(--muted-text);
            padding-left: 15px;
            margin: 20px 0;
        }
        
        footer {
            margin-top: 50px;
            padding-top: 25px;
            border-top: 1px solid #e0e0e0;
            color: var(--muted-text);
            font-size: 0.9em;
            text-align: center;
        }
        
        @media (max-width: 768px) {
            .feature-grid, .advantages-list, .specs-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
        <?php
    }
    
    private function renderProductHeader() {
        ?>
        <h1><?= htmlspecialchars($this->productData['title']) ?></h1>
        <p><?= htmlspecialchars($this->productData['description']) ?></p>
        <?php
    }
    
    private function renderFeaturesSection() {
        ?>
        <h2><i class="fas fa-ruler"></i> –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h2>
        <div class="feature-card">
            <div class="feature-grid">
                <?php foreach ($this->productData['features'] as $feature): ?>
                <div class="feature-item">
                    <span class="feature-icon"><?= $feature['icon'] ?></span>
                    <div>
                        <strong><?= htmlspecialchars($feature['label']) ?>:</strong>
                        <span><?= htmlspecialchars($feature['value']) ?></span>
                    </div>
                </div>
                <?php endforeach; ?>
            </div>
        </div>
        <?php
    }
    
    private function renderAdvantages() {
        ?>
        <h2><i class="fas fa-check-circle"></i> –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ö–≤–æ–π–Ω–æ–π –ø–æ–¥–ª–æ–∂–∫–∏</h2>
        <ul class="advantages-list">
            <?php foreach ($this->productData['advantages'] as $advantage): ?>
                <li><?= htmlspecialchars($advantage) ?></li>
            <?php endforeach; ?>
        </ul>
        <?php
    }
    
    private function renderCompatibility() {
        ?>
        <h2><i class="fas fa-layer-group"></i> –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –ø–æ–∫—Ä—ã—Ç–∏—è–º–∏</h2>
        <div class="compatibility-tags">
            <?php foreach ($this->productData['compatibility'] as $item): ?>
                <span class="tag"><?= htmlspecialchars($item) ?></span>
            <?php endforeach; ?>
        </div>
        <p>–†–∞–∑–º–µ—Ä—ã –ª–∏—Å—Ç–∞: <?= htmlspecialchars($this->productData['dimensions']['width']) ?> √ó <?= htmlspecialchars($this->productData['dimensions']['length']) ?></p>
        <?php
    }
    
    private function renderTechnicalSpecs() {
        ?>
        <h2><i class="fas fa-microscope"></i> –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</h2>
        <div class="specs-grid">
            <div class="specs-card">
                <h3><i class="fas fa-volume-off"></i> –ê–∫—É—Å—Ç–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞</h3>
                <?php foreach ($this->technicalSpecs['acoustic'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
            
            <div class="specs-card">
                <h3><i class="fas fa-temperature-low"></i> –¢–µ–ø–ª–æ–∏–∑–æ–ª—è—Ü–∏—è</h3>
                <?php foreach ($this->technicalSpecs['thermal'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
            
            <div class="specs-card">
                <h3><i class="fas fa-tint"></i> –í–ª–∞–≥–æ—Å—Ç–æ–π–∫–æ—Å—Ç—å</h3>
                <?php foreach ($this->technicalSpecs['moisture'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
        </div>
        <?php
    }
    
    private function renderAdditionalInfo() {
        ?>
        <h2><i class="fas fa-info-circle"></i> –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
        <p><?= htmlspecialchars($this->additionalInfo['installation']) ?></p>
        <p class="note">
            <i class="fas fa-exclamation-triangle"></i> 
            <?= htmlspecialchars($this->additionalInfo['warning']) ?>
        </p>
        <p><?= htmlspecialchars($this->additionalInfo['application']) ?></p>
        <?php
    }
    
    private function renderFooter() {
        ?>
        <footer>
            <p>¬© <?= date('Y') ?> –•–≤–æ–π–Ω–∞—è –ø–æ–¥–ª–æ–∂–∫–∞ 3 –º–º. –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π —ç–∫–æ–ª–æ–≥–∏—á–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –º–æ–Ω—Ç–∞–∂–∞.</p>
        </footer>
</body>
</html>
        <?php
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã

$underlayPage = new UnderlayProduct();
$underlayPage->renderProductPage();
?>
<?php
/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤–∏–Ω—Ç–æ–≤–æ–π –ª–µ—Å—Ç–Ω–∏—Ü—ã "–ö–∞–ª–≥–∞—Ä–∏"
 * 
 * 
 * 
 */

class StairProduct {
    private $productData;
    private $technicalSpecs;
    private $additionalInfo;
    
    public function __construct() {
        $this->initializeProductData();
    }
    
    private function initializeProductData() {
        $this->productData = [
            'title' => '–í–∏–Ω—Ç–æ–≤–∞—è –ª–µ—Å—Ç–Ω–∏—Ü–∞ "–ö–∞–ª–≥–∞—Ä–∏"',
            'description' => '–ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –∏ —ç—Ä–≥–æ–Ω–æ–º–∏—á–Ω–∞—è –ª–µ—Å—Ç–Ω–∏—Ü–∞ –∏–∑ —Å–≤–µ—Ç–ª–æ–≥–æ –±—É–∫–∞ —Å –ª–∞–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å—Ç—É–ø–µ–Ω—è–º–∏. –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—å–µ—Ä–æ–≤.',
            'features' => [
                'material' => ['label' => '–ú–∞—Ç–µ—Ä–∏–∞–ª —Å—Ç—É–ø–µ–Ω–µ–π', 'value' => '–ë—É–∫ –º—É–ª—å—Ç–∏–ø–ª–µ–∫—Å, –ª–∞–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π', 'icon' => 'üå≥'],
                'color' => ['label' => '–¶–≤–µ—Ç', 'value' => '–°–≤–µ—Ç–ª—ã–π –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π', 'icon' => 'üé®'],
                'load' => ['label' => '–ù–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å—Ç—É–ø–µ–Ω—å', 'value' => '234 –∫–≥', 'icon' => 'üèãÔ∏è'],
                'step' => ['label' => '–®–∞–≥ —Å—Ç—É–ø–µ–Ω–µ–π', 'value' => '–û—Ç 204 —Å–º (—Ä–µ–≥—É–ª–∏—Ä—É–µ–º—ã–π)', 'icon' => 'üìè'],
                'handrail' => ['label' => '–ü–æ—Ä—É—á–µ–Ω—å', 'value' => '–¶–µ–ª—å–Ω—ã–π', 'icon' => 'üëê'],
                'mounting' => ['label' => '–í–∞—Ä–∏–∞–Ω—Ç—ã –º–æ–Ω—Ç–∞–∂–∞', 'value' => '–ü–æ/–ø—Ä–æ—Ç–∏–≤ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–∏', 'icon' => 'üîÑ'],
                'opening' => ['label' => '–¢–∏–ø –ø—Ä–æ—ë–º–∞', 'value' => '–ö—Ä—É–≥–ª—ã–π –∏–ª–∏ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π', 'icon' => '‚è∫Ô∏è'],
                'package' => ['label' => '–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è', 'value' => '–í—Å–µ –¥–µ—Ç–∞–ª–∏ –≤ –æ–¥–Ω–æ–π –∫–æ—Ä–æ–±–∫–µ', 'icon' => 'üì¶']
            ],
            'advantages' => [
                '–ö–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç—å –∏ —ç–∫–æ–Ω–æ–º–∏—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞',
                '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ª–∞–∫–æ–Ω–∏—á–Ω—ã–π –¥–∏–∑–∞–π–Ω',
                '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –ª—é–±–æ–≥–æ –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞',
                '–ü—Ä–æ–¥—É–º–∞–Ω–Ω–∞—è —ç—Ä–≥–æ–Ω–æ–º–∏–∫–∞',
                '–†–µ–≥—É–ª–∏—Ä—É–µ–º—ã–π —à–∞–≥ —Å—Ç—É–ø–µ–Ω–µ–π',
                '–ù–µ —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫',
                '–ü—Ä–æ—Å—Ç–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏',
                '–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∏ –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å'
            ],
            'dimensions' => [
                'diameter' => '–ó–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏',
                'height' => '–†–µ–≥—É–ª–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ —ç—Ç–∞–∂',
                'weight' => '–ë–æ–ª–µ–µ 25 –∫–≥ (—Ç—Ä–µ–±—É–µ—Ç—Å—è 2 —á–µ–ª–æ–≤–µ–∫–∞ –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞)'
            ]
        ];
        
        $this->technicalSpecs = [
            'construction' => [
                '–¢–∏–ø –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏' => '–í–∏–Ω—Ç–æ–≤–∞—è',
                '–ú–∞—Ç–µ—Ä–∏–∞–ª –∫–∞—Ä–∫–∞—Å–∞' => '–ú–µ—Ç–∞–ª–ª —Å –ø–æ—Ä–æ—à–∫–æ–≤—ã–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º',
                '–û—Ç–¥–µ–ª–∫–∞' => '–õ–∞–∫ –Ω–∞ –≤–æ–¥–Ω–æ–π –æ—Å–Ω–æ–≤–µ'
            ],
            'safety' => [
                '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞' => '234 –∫–≥ –Ω–∞ —Å—Ç—É–ø–µ–Ω—å',
                '–£–≥–æ–ª –ø–æ–¥—ä–µ–º–∞' => '–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π –¥–ª—è –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è',
                '–í—ã—Å–æ—Ç–∞ –ø–µ—Ä–∏–ª' => '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è 90-100 —Å–º'
            ],
            'installation' => [
                '–í—Ä–µ–º—è –º–æ–Ω—Ç–∞–∂–∞' => '4-6 —á–∞—Å–æ–≤',
                '–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã' => '–ë–∞–∑–æ–≤—ã–π –Ω–∞–±–æ—Ä',
                '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã' => '–ù–µ —Ç—Ä–µ–±—É—é—Ç—Å—è'
            ]
        ];
        
        $this->additionalInfo = [
            'warning' => '–¢–æ–≤–∞—Ä –≤–µ—Å–æ–º –±–æ–ª–µ–µ 25 –∫–≥ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–º–µ—â–∞—Ç—å –º–∏–Ω–∏–º—É–º –¥–≤—É–º—è –ª—é–¥—å–º–∏ –∏–ª–∏ —Å –ø–æ–º–æ—â—å—é –º–µ—Ö–∞–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
            'delivery' => '–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤ –ø–æ–ª–Ω–æ–π –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏',
            'warranty' => '–ì–∞—Ä–∞–Ω—Ç–∏—è 24 –º–µ—Å—è—Ü–∞'
        ];
    }
    
    public function renderProductPage() {
        $this->renderHTMLHeader();
        $this->renderProductHeader();
        $this->renderFeaturesSection();
        $this->renderAdvantages();
        $this->renderTechnicalSpecs();
        $this->renderGallerySection();
        $this->renderAdditionalInfo();
        $this->renderFooter();
    }
    
    private function renderHTMLHeader() {
        ?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="<?= htmlspecialchars($this->productData['description']) ?>">
    <title><?= htmlspecialchars($this->productData['title']) ?> | –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #5d4037;
            --secondary-color: #8d6e63;
            --accent-color: #d7ccc8;
            --light-bg: #efebe9;
            --text-color: #3e2723;
            --muted-text: #6d4c41;
        }
        
        body {
            font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            max-width: 1100px;
            margin: 0 auto;
            padding: 30px;
            background-color: #fff;
        }
        
        h1, h2, h3 {
            color: var(--primary-color);
            margin-top: 1.8em;
        }
        
        h1 {
            border-bottom: 2px solid var(--primary-color);
            padding-bottom: 15px;
            margin-bottom: 24px;
        }
        
        h2 {
            border-left: 5px solid var(--secondary-color);
            padding-left: 14px;
            margin: 35px 0 20px;
        }
        
        .feature-card {
            background-color: var(--light-bg);
            padding: 30px;
            border-radius: 12px;
            margin-bottom: 30px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 25px;
            margin-top: 25px;
        }
        
        .feature-item {
            display: flex;
            align-items: center;
            gap: 20px;
            padding: 15px;
            background-color: rgba(255,255,255,0.8);
            border-radius: 8px;
            transition: transform 0.3s;
        }
        
        .feature-item:hover {
            transform: translateY(-3px);
        }
        
        .feature-icon {
            font-size: 1.8em;
            color: var(--secondary-color);
            min-width: 40px;
            text-align: center;
        }
        
        .advantages-list {
            margin: 30px 0;
            padding-left: 0;
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 20px;
        }
        
        .advantages-list li {
            margin-bottom: 15px;
            position: relative;
            padding-left: 40px;
            list-style: none;
            font-size: 1.05em;
        }
        
        .advantages-list li:before {
            content: "‚Ä¢";
            color: var(--secondary-color);
            position: absolute;
            left: 0;
            font-weight: bold;
            font-size: 1.8em;
            line-height: 0.9;
        }
        
        .specs-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 25px;
            margin-top: 25px;
        }
        
        .specs-card {
            background-color: var(--light-bg);
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 3px 6px rgba(0,0,0,0.05);
        }
        
        .specs-card h3 {
            margin-top: 0;
            color: var(--secondary-color);
            border-bottom: 1px dashed var(--secondary-color);
            padding-bottom: 10px;
        }
        
        .specs-item {
            margin-bottom: 12px;
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
            border-bottom: 1px dotted #d7ccc8;
        }
        
        .specs-value {
            font-weight: bold;
            color: var(--primary-color);
            text-align: right;
        }
        
        .gallery {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin: 40px 0;
        }
        
        .gallery-item {
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            position: relative;
            height: 200px;
            background-color: #f5f5f5;
        }
        
        .gallery-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s;
        }
        
        .gallery-item:hover img {
            transform: scale(1.05);
        }
        
        .warning {
            background-color: #ffebee;
            color: #c62828;
            padding: 20px;
            border-radius: 8px;
            border-left: 5px solid #c62828;
            margin: 30px 0;
            font-weight: 500;
        }
        
        .dimensions-box {
            background-color: var(--light-bg);
            padding: 20px;
            border-radius: 8px;
            margin: 25px 0;
        }
        
        footer {
            margin-top: 60px;
            padding-top: 30px;
            border-top: 1px solid #d7ccc8;
            color: var(--muted-text);
            font-size: 0.95em;
            text-align: center;
        }
        
        @media (max-width: 768px) {
            .feature-grid, .advantages-list, .specs-grid, .gallery {
                grid-template-columns: 1fr;
            }
            
            body {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
        <?php
    }
    
    private function renderProductHeader() {
        ?>
        <h1><?= htmlspecialchars($this->productData['title']) ?></h1>
        <p style="font-size: 1.1em;"><?= htmlspecialchars($this->productData['description']) ?></p>
        <?php
    }
    
    private function renderFeaturesSection() {
        ?>
        <h2><i class="fas fa-cogs"></i> –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h2>
        <div class="feature-card">
            <div class="feature-grid">
                <?php foreach ($this->productData['features'] as $feature): ?>
                <div class="feature-item">
                    <span class="feature-icon"><?= $feature['icon'] ?></span>
                    <div>
                        <strong><?= htmlspecialchars($feature['label']) ?>:</strong><br>
                        <?= htmlspecialchars($feature['value']) ?>
                    </div>
                </div>
                <?php endforeach; ?>
            </div>
            
            <div class="dimensions-box">
                <h3 style="margin-top: 0;"><i class="fas fa-ruler-combined"></i> –ì–∞–±–∞—Ä–∏—Ç—ã:</h3>
                <p><strong>–î–∏–∞–º–µ—Ç—Ä:</strong> <?= htmlspecialchars($this->productData['dimensions']['diameter']) ?></p>
                <p><strong>–í—ã—Å–æ—Ç–∞:</strong> <?= htmlspecialchars($this->productData['dimensions']['height']) ?></p>
                <p><strong>–í–µ—Å:</strong> <?= htmlspecialchars($this->productData['dimensions']['weight']) ?></p>
            </div>
        </div>
        <?php
    }
    
    private function renderAdvantages() {
        ?>
        <h2><i class="fas fa-star"></i> –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ª–µ—Å—Ç–Ω–∏—Ü—ã "–ö–∞–ª–≥–∞—Ä–∏"</h2>
        <ul class="advantages-list">
            <?php foreach ($this->productData['advantages'] as $advantage): ?>
                <li><?= htmlspecialchars($advantage) ?></li>
            <?php endforeach; ?>
        </ul>
        <?php
    }
    
    private function renderTechnicalSpecs() {
        ?>
        <h2><i class="fas fa-clipboard-list"></i> –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</h2>
        <div class="specs-grid">
            <div class="specs-card">
                <h3><i class="fas fa-cube"></i> –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</h3>
                <?php foreach ($this->technicalSpecs['construction'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
            
            <div class="specs-card">
                <h3><i class="fas fa-shield-alt"></i> –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
                <?php foreach ($this->technicalSpecs['safety'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
            
            <div class="specs-card">
                <h3><i class="fas fa-tools"></i> –ú–æ–Ω—Ç–∞–∂</h3>
                <?php foreach ($this->technicalSpecs['installation'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
        </div>
        <?php
    }
    
    private function renderGallerySection() {
        ?>
        <h2><i class="fas fa-images"></i> –ü—Ä–∏–º–µ—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏</h2>
        <div class="gallery">
            <div class="gallery-item">
                <img src="https://example.com/stairs1.jpg" alt="–õ–µ—Å—Ç–Ω–∏—Ü–∞ –ö–∞–ª–≥–∞—Ä–∏ –≤ –∏–Ω—Ç–µ—Ä—å–µ—Ä–µ">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/stairs2.jpg" alt="–î–µ—Ç–∞–ª–∏ –ª–µ—Å—Ç–Ω–∏—Ü—ã">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/stairs3.jpg" alt="–õ–µ—Å—Ç–Ω–∏—Ü–∞ –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–º –ø—Ä–æ—ë–º–µ">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/stairs4.jpg" alt="–û–±—â–∏–π –≤–∏–¥ –ª–µ—Å—Ç–Ω–∏—Ü—ã">
            </div>
        </div>
        <?php
    }
    
    private function renderAdditionalInfo() {
        ?>
        <div class="warning">
            <i class="fas fa-exclamation-triangle"></i> 
            <?= htmlspecialchars($this->additionalInfo['warning']) ?>
        </div>
        
        <p><i class="fas fa-truck"></i> <?= htmlspecialchars($this->additionalInfo['delivery']) ?></p>
        <p><i class="fas fa-certificate"></i> <?= htmlspecialchars($this->additionalInfo['warranty']) ?></p>
        <?php
    }
    
    private function renderFooter() {
        ?>
        <footer>
            <p>¬© <?= date('Y') ?> –í–∏–Ω—Ç–æ–≤–∞—è –ª–µ—Å—Ç–Ω–∏—Ü–∞ "–ö–∞–ª–≥–∞—Ä–∏" - –∏–¥–µ–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¥–æ–º–∞.</p>
        </footer>
</body>
</html>
        <?php
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
$stairPage = new StairProduct();
$stairPage->renderProductPage();
?>
<?php
/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ª–µ—Å—Ç–Ω–∏—Ü—ã "–õ–µ—Å-91"
 * 
 * 
 *
 */

class ForestStairProduct {
    private $productData;
    private $technicalSpecs;
    private $additionalInfo;
    
    public function __construct() {
        $this->initializeProductData();
    }
    
    private function initializeProductData() {
        $this->productData = [
            'title' => '–õ–µ—Å—Ç–Ω–∏—Ü–∞ "–õ–µ—Å-91"',
            'description' => '–ö–æ–º–ø–∞–∫—Ç–Ω–∞—è —Å–∞–º–æ–Ω–µ—Å—É—â–∞—è –ª–µ—Å—Ç–Ω–∏—Ü–∞ –¥–ª—è –¥–∞—á–∏ –∏–ª–∏ –∑–∞–≥–æ—Ä–æ–¥–Ω–æ–≥–æ –¥–æ–º–∞ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–π —Ö–≤–æ–π–Ω–æ–π –¥—Ä–µ–≤–µ—Å–∏–Ω—ã. –ò–¥–µ–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –º–∞–Ω—Å–∞—Ä–¥—ã –∏–ª–∏ –≤—Ç–æ—Ä–æ–≥–æ —ç—Ç–∞–∂–∞.',
            'features' => [
                'material' => ['label' => '–ú–∞—Ç–µ—Ä–∏–∞–ª', 'value' => '–•–≤–æ–π–Ω–∞—è –¥—Ä–µ–≤–µ—Å–∏–Ω–∞', 'icon' => 'üå≤'],
                'type' => ['label' => '–¢–∏–ø', 'value' => '–ü–æ–ª—É–≤–∏–Ω—Ç–æ–≤–∞—è', 'icon' => 'üåÄ'],
                'mounting' => ['label' => '–ú–æ–Ω—Ç–∞–∂', 'value' => '–õ–µ–≤–æ- –∏ –ø—Ä–∞–≤–æ–∑–∞—Ö–æ–¥–Ω–∞—è', 'icon' => ‚ÜîÔ∏è'],
                'rails' => ['label' => '–ü–µ—Ä–∏–ª–∞', 'value' => '–õ–∞–∫–æ–Ω–∏—á–Ω—ã–µ –Ω–∞ –Ω–∏–∂–Ω–µ–º –ø—Ä–æ–ª–µ—Ç–µ', 'icon' => 'üñêÔ∏è'],
                'location' => ['label' => '–†–∞–∑–º–µ—â–µ–Ω–∏–µ', 'value' => '–ó–∞–∫—Ä—ã—Ç—ã–µ –ø–æ–º–µ—â–µ–Ω–∏—è', 'icon' => 'üè†'],
                'package' => ['label' => '–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è', 'value' => '–ì–æ—Ç–æ–≤—ã–π –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–º–ø–ª–µ–∫—Ç', 'icon' => 'üì¶'],
                'weight' => ['label' => '–í–µ—Å', 'value' => '–ë–æ–ª–µ–µ 25 –∫–≥', 'icon' => 'üèãÔ∏è']
            ],
            'advantages' => [
                '–°—É—â–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—è —Å—Ä–µ–¥—Å—Ç–≤',
                '–ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–±–æ—Ç',
                '–ö–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç—å –¥–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö –ø–æ–º–µ—â–µ–Ω–∏–π',
                '–≠–∫–æ–ª–æ–≥–∏—á–Ω—ã–π –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª',
                '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å –º–æ–Ω—Ç–∞–∂–∞ (–ª–µ–≤—ã–π/–ø—Ä–∞–≤—ã–π –∑–∞—Ö–æ–¥)',
                '–ì–æ—Ç–æ–≤–∞—è –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è',
                '–ü—Ä–æ—á–Ω–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å',
                '–≠—Å—Ç–µ—Ç–∏—á–Ω—ã–π –ª–∞–∫–æ–Ω–∏—á–Ω—ã–π –¥–∏–∑–∞–π–Ω'
            ],
            'specifications' => [
                '–í—ã—Å–æ—Ç–∞' => '–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —ç—Ç–∞–∂–µ–π',
                '–®–∏—Ä–∏–Ω–∞ –º–∞—Ä—à–∞' => '–ö–æ–º–ø–∞–∫—Ç–Ω–∞—è, –æ–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –¥–ª—è –¥–∞—á',
                '–£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞' => '–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π –¥–ª—è –ø–æ–¥—ä–µ–º–∞',
                '–û—Ç–¥–µ–ª–∫–∞' => '–ù–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è –¥—Ä–µ–≤–µ—Å–∏–Ω–∞ –±–µ–∑ –ø–æ–∫—Ä–∞—Å–∫–∏'
            ]
        ];
        
        $this->technicalSpecs = [
            'construction' => [
                '–¢–∏–ø –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏' => '–°–∞–º–æ–Ω–µ—Å—É—â–∞—è –ø–æ–ª—É–≤–∏–Ω—Ç–æ–≤–∞—è',
                '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–ø–µ–Ω–µ–π' => '–ó–∞–≤–∏—Å–∏—Ç –æ—Ç –≤—ã—Å–æ—Ç—ã —ç—Ç–∞–∂–∞',
                '–°–æ–µ–¥–∏–Ω–µ–Ω–∏—è' => '–ù–∞–¥–µ–∂–Ω—ã–µ –∫—Ä–µ–ø–ª–µ–Ω–∏—è'
            ],
            'safety' => [
                '–ü—Ä–µ–¥–µ–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞' => '–î–æ 150 –∫–≥',
                '–ü–µ—Ä–∏–ª–∞' => '–ù–∞ –Ω–∏–∂–Ω–µ–º –ø—Ä–æ–ª–µ—Ç–µ',
                '–ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å —Å—Ç—É–ø–µ–Ω–µ–π' => '–ü—Ä–æ—Ç–∏–≤–æ—Å–∫–æ–ª—å–∑—è—â–∞—è'
            ],
            'installation' => [
                '–í—Ä–µ–º—è –º–æ–Ω—Ç–∞–∂–∞' => '2-4 —á–∞—Å–∞',
                '–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã' => '–ë–∞–∑–æ–≤—ã–π –Ω–∞–±–æ—Ä',
                '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã' => '–ù–µ —Ç—Ä–µ–±—É—é—Ç—Å—è'
            ]
        ];
        
        $this->additionalInfo = [
            'warning' => '–¢–æ–≤–∞—Ä –≤–µ—Å–æ–º –±–æ–ª–µ–µ 25 –∫–≥ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–º–µ—â–∞—Ç—å –º–∏–Ω–∏–º—É–º –¥–≤—É–º—è –ª—é–¥—å–º–∏ –∏–ª–∏ —Å –ø–æ–º–æ—â—å—é –º–µ—Ö–∞–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
            'recommendation' => '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è —Å–µ–∑–æ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞ –¥–∞—á–∞—Ö',
            'protection' => '–ù–µ —Ç—Ä–µ–±—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —É—Ö–æ–¥–∞'
        ];
    }
    
    public function renderProductPage() {
        $this->renderHTMLHeader();
        $this->renderProductHeader();
        $this->renderFeaturesSection();
        $this->renderAdvantages();
        $this->renderTechnicalSpecs();
        $this->renderGallerySection();
        $this->renderAdditionalInfo();
        $this->renderFooter();
    }
    
    private function renderHTMLHeader() {
        ?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="<?= htmlspecialchars($this->productData['description']) ?>">
    <title><?= htmlspecialchars($this->productData['title']) ?> | –û–ø–∏—Å–∞–Ω–∏–µ</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #4e342e;
            --secondary-color: #795548;
            --accent-color: #a1887f;
            --light-bg: #efebe9;
            --text-color: #3e2723;
            --muted-text: #5d4037;
        }
        
        body {
            font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            max-width: 1100px;
            margin: 0 auto;
            padding: 30px;
            background-color: #fff;
        }
        
        h1, h2, h3 {
            color: var(--primary-color);
            margin-top: 1.8em;
        }
        
        h1 {
            border-bottom: 2px solid var(--primary-color);
            padding-bottom: 15px;
            margin-bottom: 25px;
        }
        
        h2 {
            border-left: 5px solid var(--secondary-color);
            padding-left: 15px;
            margin: 35px 0 20px;
        }
        
        .feature-card {
            background-color: var(--light-bg);
            padding: 30px;
            border-radius: 12px;
            margin-bottom: 30px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 25px;
            margin-top: 25px;
        }
        
        .feature-item {
            display: flex;
            align-items: center;
            gap: 20px;
            padding: 15px;
            background-color: rgba(255,255,255,0.8);
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        
        .feature-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 12px rgba(0,0,0,0.1);
        }
        
        .feature-icon {
            font-size: 1.8em;
            color: var(--secondary-color);
            min-width: 40px;
            text-align: center;
        }
        
        .advantages-list {
            margin: 30px 0;
            padding-left: 0;
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 20px;
        }
        
        .advantages-list li {
            margin-bottom: 15px;
            position: relative;
            padding-left: 40px;
            list-style: none;
            font-size: 1.05em;
        }
        
        .advantages-list li:before {
            content: "‚úì";
            color: var(--secondary-color);
            position: absolute;
            left: 0;
            font-weight: bold;
            font-size: 1.5em;
        }
        
        .specs-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 25px;
            margin-top: 25px;
        }
        
        .specs-card {
            background-color: var(--light-bg);
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 3px 6px rgba(0,0,0,0.05);
        }
        
        .specs-card h3 {
            margin-top: 0;
            color: var(--secondary-color);
            border-bottom: 1px dashed var(--secondary-color);
            padding-bottom: 10px;
        }
        
        .specs-item {
            margin-bottom: 12px;
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
            border-bottom: 1px dotted var(--accent-color);
        }
        
        .specs-value {
            font-weight: bold;
            color: var(--primary-color);
            text-align: right;
        }
        
        .gallery {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin: 40px 0;
        }
        
        .gallery-item {
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            position: relative;
            height: 200px;
            background-color: #f5f5f5;
        }
        
        .gallery-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s;
        }
        
        .gallery-item:hover img {
            transform: scale(1.05);
        }
        
        .warning {
            background-color: #ffebee;
            color: #c62828;
            padding: 20px;
            border-radius: 8px;
            border-left: 5px solid #c62828;
            margin: 30px 0;
            font-weight: 500;
        }
        
        .specs-table {
            width: 100%;
            border-collapse: collapse;
            margin: 25px 0;
        }
        
        .specs-table th {
            background-color: var(--secondary-color);
            color: white;
            text-align: left;
            padding: 12px;
        }
        
        .specs-table td {
            padding: 12px;
            border-bottom: 1px solid var(--accent-color);
        }
        
        .specs-table tr:nth-child(even) {
            background-color: var(--light-bg);
        }
        
        footer {
            margin-top: 60px;
            padding-top: 30px;
            border-top: 1px solid var(--accent-color);
            color: var(--muted-text);
            font-size: 0.95em;
            text-align: center;
        }
        
        @media (max-width: 768px) {
            .feature-grid, .advantages-list, .specs-grid, .gallery {
                grid-template-columns: 1fr;
            }
            
            body {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
        <?php
    }
    
    private function renderProductHeader() {
        ?>
        <h1><?= htmlspecialchars($this->productData['title']) ?></h1>
        <p style="font-size: 1.1em;"><?= htmlspecialchars($this->productData['description']) ?></p>
        <?php
    }
    
    private function renderFeaturesSection() {
        ?>
        <h2><i class="fas fa-info-circle"></i> –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h2>
        <div class="feature-card">
            <div class="feature-grid">
                <?php foreach ($this->productData['features'] as $feature): ?>
                <div class="feature-item">
                    <span class="feature-icon"><?= $feature['icon'] ?></span>
                    <div>
                        <strong><?= htmlspecialchars($feature['label']) ?>:</strong><br>
                        <?= htmlspecialchars($feature['value']) ?>
                    </div>
                </div>
                <?php endforeach; ?>
            </div>
            
            <h3 style="margin-top: 30px;"><i class="fas fa-ruler-combined"></i> –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</h3>
            <table class="specs-table">
                <?php foreach ($this->productData['specifications'] as $param => $value): ?>
                <tr>
                    <td><?= htmlspecialchars($param) ?></td>
                    <td><strong><?= htmlspecialchars($value) ?></strong></td>
                </tr>
                <?php endforeach; ?>
            </table>
        </div>
        <?php
    }
    
    private function renderAdvantages() {
        ?>
        <h2><i class="fas fa-check-double"></i> –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –º–æ–¥–µ–ª–∏ "–õ–µ—Å-91"</h2>
        <ul class="advantages-list">
            <?php foreach ($this->productData['advantages'] as $advantage): ?>
                <li><?= htmlspecialchars($advantage) ?></li>
            <?php endforeach; ?>
        </ul>
        <?php
    }
    
    private function renderTechnicalSpecs() {
        ?>
        <h2><i class="fas fa-clipboard-check"></i> –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏</h2>
        <div class="specs-grid">
            <div class="specs-card">
                <h3><i class="fas fa-cube"></i> –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</h3>
                <?php foreach ($this->technicalSpecs['construction'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
            
            <div class="specs-card">
                <h3><i class="fas fa-shield-alt"></i> –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
                <?php foreach ($this->technicalSpecs['safety'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
            
            <div class="specs-card">
                <h3><i class="fas fa-tools"></i> –ú–æ–Ω—Ç–∞–∂</h3>
                <?php foreach ($this->technicalSpecs['installation'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
        </div>
        <?php
    }
    
    private function renderGallerySection() {
        ?>
        <h2><i class="fas fa-camera"></i> –ü—Ä–∏–º–µ—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏</h2>
        <div class="gallery">
            <div class="gallery-item">
                <img src="https://example.com/forest1.jpg" alt="–õ–µ—Å—Ç–Ω–∏—Ü–∞ –õ–µ—Å-91 –≤ –∏–Ω—Ç–µ—Ä—å–µ—Ä–µ –¥–∞—á–∏">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/forest2.jpg" alt="–î–µ—Ç–∞–ª–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/forest3.jpg" alt="–ü–æ–ª—É–≤–∏–Ω—Ç–æ–≤–∞—è —Ñ–æ—Ä–º–∞">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/forest4.jpg" alt="–ü–µ—Ä–∏–ª–∞ –Ω–∏–∂–Ω–µ–≥–æ –ø—Ä–æ–ª–µ—Ç–∞">
            </div>
        </div>
        <?php
    }
    
    private function renderAdditionalInfo() {
        ?>
        <div class="warning">
            <i class="fas fa-exclamation-triangle"></i> 
            <?= htmlspecialchars($this->additionalInfo['warning']) ?>
        </div>
        
        <p><i class="fas fa-home"></i> <?= htmlspecialchars($this->additionalInfo['recommendation']) ?></p>
        <p><i class="fas fa-leaf"></i> <?= htmlspecialchars($this->additionalInfo['protection']) ?></p>
        <?php
    }
    
    private function renderFooter() {
        ?>
        <footer>
            <p>¬© <?= date('Y') ?> –õ–µ—Å—Ç–Ω–∏—Ü–∞ "–õ–µ—Å-91" - –ø—Ä–∞–∫—Ç–∏—á–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –∑–∞–≥–æ—Ä–æ–¥–Ω–æ–≥–æ –¥–æ–º–∞.</p>
        </footer>
</body>
</html>
        <?php
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
$stairPage = new ForestStairProduct();
$stairPage->renderProductPage();
?>
<?php
/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —á–µ—Ä–¥–∞—á–Ω–æ–π –ª–µ—Å—Ç–Ω–∏—Ü—ã Dolle HOBBY 26
 * 
 * 
 * 
 */

class AtticLadderProduct {
    private $productData;
    private $technicalSpecs;
    private $additionalFeatures;
    
    public function __construct() {
        $this->initializeProductData();
    }
    
    private function initializeProductData() {
        $this->productData = [
            'title' => '–ß–µ—Ä–¥–∞—á–Ω–∞—è –ª–µ—Å—Ç–Ω–∏—Ü–∞ Dolle HOBBY 26 120x60 —Å–º',
            'description' => '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–∫–ª–∞–¥–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ —á–µ—Ä–¥–∞–∫ —Å —Ç–µ–ø–ª–æ–∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ª—é–∫–æ–º –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ —Å—Ç—É–ø–µ–Ω—è–º–∏.',
            'productCode' => '5004601',
            'features' => [
                'type' => ['label' => '–¢–∏–ø', 'value' => '–°–∫–ª–∞–¥–Ω–∞—è —á–µ—Ä–¥–∞—á–Ω–∞—è', 'icon' => 'ü™ú'],
                'sections' => ['label' => '–°–µ–∫—Ü–∏–∏', 'value' => '3 —Å–∫–ª–∞–¥–Ω—ã–µ', 'icon' => 'üîó'],
                'load' => ['label' => '–ù–∞–≥—Ä—É–∑–∫–∞', 'value' => '150 –∫–≥', 'icon' => 'üèãÔ∏è'],
                'angle' => ['label' => '–£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞', 'value' => '60¬∞', 'icon' => 'üìê'],
                'material' => ['label' => '–ú–∞—Ç–µ—Ä–∏–∞–ª', 'value' => '–î–µ—Ä–µ–≤–æ', 'icon' => 'üå≤'],
                'steps' => ['label' => '–°—Ç—É–ø–µ–Ω–∏', 'value' => '–ù–µ—Å–∫–æ–ª—å–∑—è—â–∏–µ –¥–µ—Ä–µ–≤—è–Ω–Ω—ã–µ', 'icon' => 'üë£'],
                'hatch' => ['label' => '–õ—é–∫', 'value' => '–° —Ç–µ–ø–ª–æ–∏–∑–æ–ª—è—Ü–∏–µ–π', 'icon' => 'üö™'],
                'extension' => ['label' => '–ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ', 'value' => '–í–æ–∑–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ–∫—Ü–∏–π', 'icon' => '‚ûï']
            ],
            'dimensions' => [
                'closed' => ['label' => '–í —Å–ª–æ–∂–µ–Ω–Ω–æ–º –≤–∏–¥–µ', 'value' => '120√ó60 —Å–º'],
                'opened' => ['label' => '–í —Ä–∞–∑–ª–æ–∂–µ–Ω–Ω–æ–º –≤–∏–¥–µ', 'value' => '–î–ª–∏–Ω–∞ 164.5 —Å–º'],
                'box' => ['label' => '–ö–æ—Ä–æ–± –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏', 'value' => '1175√ó115√ó576 –º–º']
            ],
            'advantages' => [
                '–ö–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç—å –≤ —Å–ª–æ–∂–µ–Ω–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏',
                '–ù–∞–¥–µ–∂–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤ –ø–æ–¥–Ω—è—Ç–æ–º –ø–æ–ª–æ–∂–µ–Ω–∏–∏',
                '–¢–µ–ø–ª–æ–∏–∑–æ–ª—è—Ü–∏—è —á–µ—Ä–¥–∞—á–Ω–æ–≥–æ –ª—é–∫–∞',
                '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –Ω–µ—Å–∫–æ–ª—å–∑—è—â–∏–µ —Å—Ç—É–ø–µ–Ω–∏',
                '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∫—Ä–∞—Å–∫–∏ –ø–æ–¥ –∏–Ω—Ç–µ—Ä—å–µ—Ä',
                '–ü—Ä–æ—á–Ω–∞—è –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è',
                '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏—è –≤—ã—Å–æ—Ç—ã',
                '–õ–µ–≥–∫–∏–π –∏ —É–¥–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø –Ω–∞ —á–µ—Ä–¥–∞–∫'
            ]
        ];
        
        $this->technicalSpecs = [
            'construction' => [
                '–¢–∏–ø –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏' => '3-—Å–µ–∫—Ü–∏–æ–Ω–Ω–∞—è —Å–∫–ª–∞–¥–Ω–∞—è',
                '–ú–µ—Ö–∞–Ω–∏–∑–º –æ—Ç–∫—Ä—ã–≤–∞–Ω–∏—è' => '–ü–ª–∞–≤–Ω—ã–π, —Å –ø—Ä—É–∂–∏–Ω–∞–º–∏',
                '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞' => '–ö—Ä—é–∫ –≤ –ø–æ–¥–Ω—è—Ç–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏'
            ],
            'materials' => [
                '–û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ç–µ—Ä–∏–∞–ª' => '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –¥—Ä–µ–≤–µ—Å–∏–Ω–∞',
                '–°—Ç—É–ø–µ–Ω–∏' => '–®–µ—Ä–æ—Ö–æ–≤–∞—Ç–∞—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å',
                '–£–ø–ª–æ—Ç–Ω–∏—Ç–µ–ª—å' => '–¢–µ–ø–ª–æ–∏–∑–æ–ª—è—Ü–∏—è –ø–æ –ø–µ—Ä–∏–º–µ—Ç—Ä—É'
            ],
            'installation' => [
                '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –≤—ã—Å–æ—Ç–∞' => '–î–æ 2.8 –º',
                '–í—Ä–µ–º—è –º–æ–Ω—Ç–∞–∂–∞' => '2-3 —á–∞—Å–∞',
                '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–µ–∫—Ü–∏–∏' => '–î–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏'
            ]
        ];
        
        $this->additionalFeatures = [
            'safety' => '–°—Ç—É–ø–µ–Ω–∏ —Å –ø—Ä–æ—Ç–∏–≤–æ—Å–∫–æ–ª—å–∑—è—â–∏–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º',
            'customization' => '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∫—Ä–∞—Å–∫–∏ –≤ –ª—é–±–æ–π —Ü–≤–µ—Ç',
            'thermal' => '–¢–µ–ø–ª–æ–∏–∑–æ–ª—è—Ü–∏—è –ª—é–∫–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Ç–µ—Ä–∏ —Ç–µ–ø–ª–∞',
            'space' => '–ù–µ –∑–∞–Ω–∏–º–∞–µ—Ç –º–µ—Å—Ç–æ –≤ —Å–ª–æ–∂–µ–Ω–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏'
        ];
    }
    
    public function renderProductPage() {
        $this->renderHTMLHeader();
        $this->renderProductHeader();
        $this->renderFeaturesSection();
        $this->renderDimensions();
        $this->renderAdvantages();
        $this->renderTechnicalSpecs();
        $this->renderAdditionalFeatures();
        $this->renderGallerySection();
        $this->renderFooter();
    }
    
    private function renderHTMLHeader() {
        ?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="<?= htmlspecialchars($this->productData['description']) ?>">
    <title><?= htmlspecialchars($this->productData['title']) ?> | –û–ø–∏—Å–∞–Ω–∏–µ</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #5d4037;
            --secondary-color: #8d6e63;
            --accent-color: #d7ccc8;
            --light-bg: #efebe9;
            --text-color: #3e2723;
            --muted-text: #6d4c41;
        }
        
        body {
            font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            max-width: 1100px;
            margin: 0 auto;
            padding: 30px;
            background-color: #fff;
        }
        
        h1, h2, h3 {
            color: var(--primary-color);
            margin-top: 1.8em;
        }
        
        h1 {
            border-bottom: 2px solid var(--primary-color);
            padding-bottom: 15px;
            margin-bottom: 25px;
        }
        
        h2 {
            border-left: 5px solid var(--secondary-color);
            padding-left: 15px;
            margin: 35px 0 20px;
        }
        
        .product-code {
            background-color: var(--light-bg);
            display: inline-block;
            padding: 5px 10px;
            border-radius: 4px;
            font-size: 0.9em;
            color: var(--muted-text);
        }
        
        .feature-card {
            background-color: var(--light-bg);
            padding: 30px;
            border-radius: 12px;
            margin-bottom: 30px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 25px;
            margin-top: 25px;
        }
        
        .feature-item {
            display: flex;
            align-items: center;
            gap: 20px;
            padding: 15px;
            background-color: rgba(255,255,255,0.8);
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        
        .feature-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 12px rgba(0,0,0,0.1);
        }
        
        .feature-icon {
            font-size: 1.8em;
            color: var(--secondary-color);
            min-width: 40px;
            text-align: center;
        }
        
        .dimensions-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin: 30px 0;
        }
        
        .dimension-card {
            background-color: var(--light-bg);
            padding: 20px;
            border-radius: 8px;
        }
        
        .dimension-value {
            font-size: 1.2em;
            font-weight: bold;
            color: var(--primary-color);
            margin-top: 5px;
        }
        
        .advantages-list {
            margin: 30px 0;
            padding-left: 0;
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 20px;
        }
        
        .advantages-list li {
            margin-bottom: 15px;
            position: relative;
            padding-left: 40px;
            list-style: none;
            font-size: 1.05em;
        }
        
        .advantages-list li:before {
            content: "‚Ä¢";
            color: var(--secondary-color);
            position: absolute;
            left: 0;
            font-weight: bold;
            font-size: 1.8em;
            line-height: 0.9;
        }
        
        .specs-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 25px;
            margin-top: 25px;
        }
        
        .specs-card {
            background-color: var(--light-bg);
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 3px 6px rgba(0,0,0,0.05);
        }
        
        .specs-card h3 {
            margin-top: 0;
            color: var(--secondary-color);
            border-bottom: 1px dashed var(--secondary-color);
            padding-bottom: 10px;
        }
        
        .specs-item {
            margin-bottom: 12px;
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
            border-bottom: 1px dotted var(--accent-color);
        }
        
        .specs-value {
            font-weight: bold;
            color: var(--primary-color);
            text-align: right;
        }
        
        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
            gap: 20px;
            margin: 40px 0;
        }
        
        .feature-box {
            background-color: var(--light-bg);
            padding: 20px;
            border-radius: 8px;
            display: flex;
            gap: 15px;
            align-items: center;
        }
        
        .feature-box i {
            font-size: 1.5em;
            color: var(--secondary-color);
        }
        
        .gallery {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin: 40px 0;
        }
        
        .gallery-item {
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            position: relative;
            height: 200px;
            background-color: #f5f5f5;
        }
        
        .gallery-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s;
        }
        
        .gallery-item:hover img {
            transform: scale(1.05);
        }
        
        footer {
            margin-top: 60px;
            padding-top: 30px;
            border-top: 1px solid var(--accent-color);
            color: var(--muted-text);
            font-size: 0.95em;
            text-align: center;
        }
        
        @media (max-width: 768px) {
            .feature-grid, .dimensions-grid, .advantages-list, 
            .specs-grid, .features-grid, .gallery {
                grid-template-columns: 1fr;
            }
            
            body {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
        <?php
    }
    
    private function renderProductHeader() {
        ?>
        <h1><?= htmlspecialchars($this->productData['title']) ?></h1>
        <p style="font-size: 1.1em;"><?= htmlspecialchars($this->productData['description']) ?></p>

        <?php
    }
    
    private function renderFeaturesSection() {
        ?>
        <h2><i class="fas fa-info-circle"></i> –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h2>
        <div class="feature-card">
            <div class="feature-grid">
                <?php foreach ($this->productData['features'] as $feature): ?>
                <div class="feature-item">
                    <span class="feature-icon"><?= $feature['icon'] ?></span>
                    <div>
                        <strong><?= htmlspecialchars($feature['label']) ?>:</strong><br>
                        <?= htmlspecialchars($feature['value']) ?>
                    </div>
                </div>
                <?php endforeach; ?>
            </div>
        </div>
        <?php
    }
    
    private function renderDimensions() {
        ?>
        <h2><i class="fas fa-ruler-combined"></i> –ì–∞–±–∞—Ä–∏—Ç—ã</h2>
        <div class="dimensions-grid">
            <?php foreach ($this->productData['dimensions'] as $dimension): ?>
            <div class="dimension-card">
                <h3 style="margin-top: 0;"><?= htmlspecialchars($dimension['label']) ?></h3>
                <div class="dimension-value"><?= htmlspecialchars($dimension['value']) ?></div>
            </div>
            <?php endforeach; ?>
        </div>
        <?php
    }
    
    private function renderAdvantages() {
        ?>
        <h2><i class="fas fa-check-double"></i> –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</h2>
        <ul class="advantages-list">
            <?php foreach ($this->productData['advantages'] as $advantage): ?>
                <li><?= htmlspecialchars($advantage) ?></li>
            <?php endforeach; ?>
        </ul>
        <?php
    }
    
    private function renderTechnicalSpecs() {
        ?>
        <h2><i class="fas fa-clipboard-list"></i> –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h2>
        <div class="specs-grid">
            <div class="specs-card">
                <h3><i class="fas fa-cube"></i> –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</h3>
                <?php foreach ($this->technicalSpecs['construction'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
            
            <div class="specs-card">
                <h3><i class="fas fa-tree"></i> –ú–∞—Ç–µ—Ä–∏–∞–ª—ã</h3>
                <?php foreach ($this->technicalSpecs['materials'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
            
            <div class="specs-card">
                <h3><i class="fas fa-tools"></i> –£—Å—Ç–∞–Ω–æ–≤–∫–∞</h3>
                <?php foreach ($this->technicalSpecs['installation'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
        </div>
        <?php
    }
    
    private function renderAdditionalFeatures() {
        ?>
        <h2><i class="fas fa-star"></i> –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏</h2>
        <div class="features-grid">
            <div class="feature-box">
                <i class="fas fa-safety-boot"></i>
                <div>
                    <h3 style="margin: 0 0 5px 0;">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
                    <p><?= htmlspecialchars($this->additionalFeatures['safety']) ?></p>
                </div>
            </div>
            <div class="feature-box">
                <i class="fas fa-paint-brush"></i>
                <div>
                    <h3 style="margin: 0 0 5px 0;">–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω</h3>
                    <p><?= htmlspecialchars($this->additionalFeatures['customization']) ?></p>
                </div>
            </div>
            <div class="feature-box">
                <i class="fas fa-temperature-low"></i>
                <div>
                    <h3 style="margin: 0 0 5px 0;">–¢–µ–ø–ª–æ–∏–∑–æ–ª—è—Ü–∏—è</h3>
                    <p><?= htmlspecialchars($this->additionalFeatures['thermal']) ?></p>
                </div>
            </div>
            <div class="feature-box">
                <i class="fas fa-arrows-alt-v"></i>
                <div>
                    <h3 style="margin: 0 0 5px 0;">–≠–∫–æ–Ω–æ–º–∏—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞</h3>
                    <p><?= htmlspecialchars($this->additionalFeatures['space']) ?></p>
                </div>
            </div>
        </div>
        <?php
    }
    
    private function renderGallerySection() {
        ?>
        <h2><i class="fas fa-images"></i> –ì–∞–ª–µ—Ä–µ—è</h2>
        <div class="gallery">
            <div class="gallery-item">
                <img src="https://example.com/dolle-closed.jpg" alt="–õ–µ—Å—Ç–Ω–∏—Ü–∞ –≤ —Å–ª–æ–∂–µ–Ω–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/dolle-opened.jpg" alt="–õ–µ—Å—Ç–Ω–∏—Ü–∞ –≤ —Ä–∞–∑–ª–æ–∂–µ–Ω–Ω–æ–º –≤–∏–¥–µ">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/dolle-steps.jpg" alt="–ù–µ—Å–∫–æ–ª—å–∑—è—â–∏–µ —Å—Ç—É–ø–µ–Ω–∏">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/dolle-hatch.jpg" alt="–¢–µ–ø–ª–æ–∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ª—é–∫">
            </div>
        </div>
        <?php
    }
    
    private function renderFooter() {
        ?>
        <footer>
            <p>¬© <?= date('Y') ?> –ß–µ—Ä–¥–∞—á–Ω–∞—è –ª–µ—Å—Ç–Ω–∏—Ü–∞ Dolle HOBBY 26 - —É–¥–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø –Ω–∞ —á–µ—Ä–¥–∞–∫ —Å —ç–∫–æ–Ω–æ–º–∏–µ–π –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞.</p>
        </footer>
</body>
</html>
        <?php
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
$ladderPage = new AtticLadderProduct();
$ladderPage->renderProductPage();
?>
<?php
/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –¥—é–±–µ–ª—è —Å –≥—Ä–∏–±–æ–≤–∏–¥–Ω–æ–π –≥–æ–ª–æ–≤–∫–æ–π
 * 
 * 
 * 
 */

class MushroomDowelsProduct {
    private $productData;
    private $technicalSpecs;
    private $usageInfo;
    
    public function __construct() {
        $this->initializeProductData();
    }
    
    private function initializeProductData() {
        $this->productData = [
            'title' => '–î—é–±–µ–ª—å —Å –≥—Ä–∏–±–æ–≤–∏–¥–Ω–æ–π –≥–æ–ª–æ–≤–∫–æ–π 6√ó40 –º–º',
            'description' => '–ù–∞–¥–µ–∂–Ω—ã–π –∫—Ä–µ–ø–µ–∂–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø–ª–æ—Ç–Ω—ã—Ö –æ—Å–Ω–æ–≤–∞–Ω–∏–π —Å —É–¥–æ–±–Ω–æ–π –≥—Ä–∏–±–æ–≤–∏–¥–Ω–æ–π –º–∞–Ω–∂–µ—Ç–æ–π, –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—é—â–µ–π –ø—Ä–æ–≤–∞–ª–∏–≤–∞–Ω–∏–µ.',
            'features' => [
                'head' => ['label' => '–¢–∏–ø –≥–æ–ª–æ–≤–∫–∏', 'value' => '–ì—Ä–∏–±–æ–≤–∏–¥–Ω–∞—è –º–∞–Ω–∂–µ—Ç–∞', 'icon' => 'üçÑ'],
                'material' => ['label' => '–ú–∞—Ç–µ—Ä–∏–∞–ª', 'value' => '–ü–æ–ª–∏–ø—Ä–æ–ø–∏–ª–µ–Ω', 'icon' => 'üß™'],
                'size' => ['label' => '–†–∞–∑–º–µ—Ä', 'value' => '6√ó40 –º–º', 'icon' => 'üìè'],
                'quantity' => ['label' => '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', 'value' => '100 —à—Ç –≤ –∫–æ–º–ø–ª–µ–∫—Ç–µ', 'icon' => 'üßÆ'],
                'mounting' => ['label' => '–ú–æ–Ω—Ç–∞–∂', 'value' => '–õ–µ–≥–∫–∏–π', 'icon' => 'üî®'],
                'removal' => ['label' => '–î–µ–º–æ–Ω—Ç–∞–∂', 'value' => '–ü—Ä–æ—Å—Ç–æ–π', 'icon' => 'üîÑ'],
                'durability' => ['label' => '–°—Ä–æ–∫ —Å–ª—É–∂–±—ã', 'value' => '–î–æ–ª–≥–æ–≤–µ—á–Ω—ã–π', 'icon' => '‚è≥']
            ],
            'advantages' => [
                '–ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–≤–∞–ª–∏–≤–∞–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ä—Å—Ç–∏–µ',
                '–õ–µ–≥–∫–æ –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏',
                '–ù–∞–¥–µ–∂–Ω–æ–µ –∫—Ä–µ–ø–ª–µ–Ω–∏–µ –≤ –ø–ª–æ—Ç–Ω—ã—Ö –æ—Å–Ω–æ–≤–∞–Ω–∏—è—Ö',
                '–£—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∫ –∫–æ—Ä—Ä–æ–∑–∏–∏',
                '–®–∏—Ä–æ–∫–∞—è –º–∞–Ω–∂–µ—Ç–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω–∞–≥—Ä—É–∑–∫—É',
                '–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è',
                '–≠–∫–æ–Ω–æ–º–∏—á–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞ 100 —à—Ç',
                '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ'
            ],
            'dimensions' => [
                'diameter' => '6 –º–º',
                'length' => '40 –º–º',
                'head_diameter' => '12 –º–º (–≥—Ä–∏–±–æ–≤–∏–¥–Ω–∞—è —á–∞—Å—Ç—å)'
            ]
        ];
        
        $this->technicalSpecs = [
            'materials' => [
                '–û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ç–µ—Ä–∏–∞–ª' => '–ü–æ–ª–∏–ø—Ä–æ–ø–∏–ª–µ–Ω',
                '–¶–≤–µ—Ç' => '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –±–µ–ª—ã–π',
                '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω' => '–û—Ç -20¬∞C –¥–æ +80¬∞C'
            ],
            'compatibility' => [
                '–ë–µ—Ç–æ–Ω' => '–û–ø—Ç–∏–º–∞–ª—å–Ω–æ',
                '–ü–æ–ª–Ω–æ—Ç–µ–ª—ã–π –∫–∏—Ä–ø–∏—á' => '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è',
                '–ì–∞–∑–æ–±–µ—Ç–æ–Ω' => '–ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è',
                '–ì–∏–ø—Å–æ–∫–∞—Ä—Ç–æ–Ω' => '–ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç'
            ],
            'characteristics' => [
                '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞ –æ—Ç–≤–µ—Ä—Å—Ç–∏—è' => '45 –º–º',
                '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –¥–∏–∞–º–µ—Ç—Ä —Å–≤–µ—Ä–ª–∞' => '6 –º–º',
                '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞' => '–ó–∞–≤–∏—Å–∏—Ç –æ—Ç –æ—Å–Ω–æ–≤–∞–Ω–∏—è'
            ]
        ];
        
        $this->usageInfo = [
            'step1' => '–ü—Ä–æ—Å–≤–µ—Ä–ª–∏—Ç—å –æ—Ç–≤–µ—Ä—Å—Ç–∏–µ –¥–∏–∞–º–µ—Ç—Ä–æ–º 6 –º–º –Ω–∞ –≥–ª—É–±–∏–Ω—É 45 –º–º',
            'step2' => '–û—á–∏—Å—Ç–∏—Ç—å –æ—Ç–≤–µ—Ä—Å—Ç–∏–µ –æ—Ç –ø—ã–ª–∏',
            'step3' => '–í—Å—Ç–∞–≤–∏—Ç—å –¥—é–±–µ–ª—å –¥–æ —É–ø–æ—Ä–∞ –≥—Ä–∏–±–æ–≤–∏–¥–Ω–æ–π –≥–æ–ª–æ–≤–∫–æ–π',
            'step4' => '–ó–∞–≤–µ—Ä–Ω—É—Ç—å —à—É—Ä—É–ø –∏–ª–∏ –≤–∏–Ω—Ç',
            'warning' => '–ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —Ä—ã—Ö–ª—ã—Ö –∏–ª–∏ —Ö—Ä—É–ø–∫–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö'
        ];
    }
    
    public function renderProductPage() {
        $this->renderHTMLHeader();
        $this->renderProductHeader();
        $this->renderFeaturesSection();
        $this->renderAdvantages();
        $this->renderTechnicalSpecs();
        $this->renderUsageInstructions();
        $this->renderGallerySection();
        $this->renderFooter();
    }
    
    private function renderHTMLHeader() {
        ?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="<?= htmlspecialchars($this->productData['description']) ?>">
    <title><?= htmlspecialchars($this->productData['title']) ?> | –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #455a64;
            --secondary-color: #607d8b;
            --accent-color: #b0bec5;
            --light-bg: #eceff1;
            --text-color: #263238;
            --muted-text: #546e7a;
        }
        
        body {
            font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            max-width: 1100px;
            margin: 0 auto;
            padding: 30px;
            background-color: #fff;
        }
        
        h1, h2, h3 {
            color: var(--primary-color);
            margin-top: 1.8em;
        }
        
        h1 {
            border-bottom: 2px solid var(--primary-color);
            padding-bottom: 15px;
            margin-bottom: 25px;
        }
        
        h2 {
            border-left: 5px solid var(--secondary-color);
            padding-left: 15px;
            margin: 35px 0 20px;
        }
        
        .feature-card {
            background-color: var(--light-bg);
            padding: 30px;
            border-radius: 12px;
            margin-bottom: 30px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 25px;
            margin-top: 25px;
        }
        
        .feature-item {
            display: flex;
            align-items: center;
            gap: 20px;
            padding: 15px;
            background-color: rgba(255,255,255,0.8);
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        
        .feature-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 12px rgba(0,0,0,0.1);
        }
        
        .feature-icon {
            font-size: 1.8em;
            color: var(--secondary-color);
            min-width: 40px;
            text-align: center;
        }
        
        .advantages-list {
            margin: 30px 0;
            padding-left: 0;
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 20px;
        }
        
        .advantages-list li {
            margin-bottom: 15px;
            position: relative;
            padding-left: 40px;
            list-style: none;
            font-size: 1.05em;
        }
        
        .advantages-list li:before {
            content: "‚Ä¢";
            color: var(--secondary-color);
            position: absolute;
            left: 0;
            font-weight: bold;
            font-size: 1.8em;
            line-height: 0.9;
        }
        
        .specs-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 25px;
            margin-top: 25px;
        }
        
        .specs-card {
            background-color: var(--light-bg);
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 3px 6px rgba(0,0,0,0.05);
        }
        
        .specs-card h3 {
            margin-top: 0;
            color: var(--secondary-color);
            border-bottom: 1px dashed var(--secondary-color);
            padding-bottom: 10px;
        }
        
        .specs-item {
            margin-bottom: 12px;
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
            border-bottom: 1px dotted var(--accent-color);
        }
        
        .specs-value {
            font-weight: bold;
            color: var(--primary-color);
            text-align: right;
        }
        
        .usage-steps {
            background-color: var(--light-bg);
            padding: 25px;
            border-radius: 10px;
            margin: 30px 0;
        }
        
        .usage-step {
            display: flex;
            gap: 15px;
            margin-bottom: 15px;
            align-items: center;
        }
        
        .step-number {
            background-color: var(--secondary-color);
            color: white;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
        }
        
        .warning-box {
            background-color: #fff3e0;
            border-left: 5px solid #ffa000;
            padding: 20px;
            border-radius: 0 8px 8px 0;
            margin: 30px 0;
            font-weight: 500;
        }
        
        .dims-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
            margin: 30px 0;
        }
        
        .dim-card {
            background-color: var(--light-bg);
            padding: 20px;
            border-radius: 8px;
            text-align: center;
        }
        
        .dim-value {
            font-size: 1.3em;
            font-weight: bold;
            color: var(--primary-color);
            margin: 10px 0;
        }
        
        .gallery {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin: 40px 0;
        }
        
        .gallery-item {
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            position: relative;
            height: 200px;
            background-color: #f5f5f5;
        }
        
        .gallery-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s;
        }
        
        .gallery-item:hover img {
            transform: scale(1.05);
        }
        
        footer {
            margin-top: 60px;
            padding-top: 30px;
            border-top: 1px solid var(--accent-color);
            color: var(--muted-text);
            font-size: 0.95em;
            text-align: center;
        }
        
        @media (max-width: 768px) {
            .feature-grid, .advantages-list, .specs-grid, 
            .dims-grid, .gallery {
                grid-template-columns: 1fr;
            }
            
            body {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
        <?php
    }
    
    private function renderProductHeader() {
        ?>
        <h1><?= htmlspecialchars($this->productData['title']) ?></h1>
        <p style="font-size: 1.1em;"><?= htmlspecialchars($this->productData['description']) ?></p>
        <?php
    }
    
    private function renderFeaturesSection() {
        ?>
        <h2><i class="fas fa-info-circle"></i> –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h2>
        <div class="feature-card">
            <div class="feature-grid">
                <?php foreach ($this->productData['features'] as $feature): ?>
                <div class="feature-item">
                    <span class="feature-icon"><?= $feature['icon'] ?></span>
                    <div>
                        <strong><?= htmlspecialchars($feature['label']) ?>:</strong><br>
                        <?= htmlspecialchars($feature['value']) ?>
                    </div>
                </div>
                <?php endforeach; ?>
            </div>
            
            <h3 style="margin-top: 30px;"><i class="fas fa-ruler"></i> –†–∞–∑–º–µ—Ä—ã</h3>
            <div class="dims-grid">
                <div class="dim-card">
                    <div>–î–∏–∞–º–µ—Ç—Ä</div>
                    <div class="dim-value"><?= htmlspecialchars($this->productData['dimensions']['diameter']) ?></div>
                </div>
                <div class="dim-card">
                    <div>–î–ª–∏–Ω–∞</div>
                    <div class="dim-value"><?= htmlspecialchars($this->productData['dimensions']['length']) ?></div>
                </div>
                <div class="dim-card">
                    <div>–ì–æ–ª–æ–≤–∫–∞</div>
                    <div class="dim-value"><?= htmlspecialchars($this->productData['dimensions']['head_diameter']) ?></div>
                </div>
            </div>
        </div>
        <?php
    }
    
    private function renderAdvantages() {
        ?>
        <h2><i class="fas fa-check-circle"></i> –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</h2>
        <ul class="advantages-list">
            <?php foreach ($this->productData['advantages'] as $advantage): ?>
                <li><?= htmlspecialchars($advantage) ?></li>
            <?php endforeach; ?>
        </ul>
        <?php
    }
    
    private function renderTechnicalSpecs() {
        ?>
        <h2><i class="fas fa-clipboard-list"></i> –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h2>
        <div class="specs-grid">
            <div class="specs-card">
                <h3><i class="fas fa-flask"></i> –ú–∞—Ç–µ—Ä–∏–∞–ª—ã</h3>
                <?php foreach ($this->technicalSpecs['materials'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
            
            <div class="specs-card">
                <h3><i class="fas fa-check-double"></i> –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å</h3>
                <?php foreach ($this->technicalSpecs['compatibility'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
            
            <div class="specs-card">
                <h3><i class="fas fa-tachometer-alt"></i> –ü–∞—Ä–∞–º–µ—Ç—Ä—ã</h3>
                <?php foreach ($this->technicalSpecs['characteristics'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
        </div>
        <?php
    }
    
    private function renderUsageInstructions() {
        ?>
        <h2><i class="fas fa-tools"></i> –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é</h2>
        <div class="usage-steps">
            <?php foreach ($this->usageInfo as $key => $step): ?>
                <?php if(strpos($key, 'step') === 0): ?>
                <div class="usage-step">
                    <div class="step-number"><?= substr($key, 4) ?></div>
                    <div><?= htmlspecialchars($step) ?></div>
                </div>
                <?php endif; ?>
            <?php endforeach; ?>
        </div>
        
        <div class="warning-box">
            <i class="fas fa-exclamation-triangle"></i> 
            <?= htmlspecialchars($this->usageInfo['warning']) ?>
        </div>
        <?php
    }
    
    private function renderGallerySection() {
        ?>
        <h2><i class="fas fa-images"></i> –ì–∞–ª–µ—Ä–µ—è</h2>
        <div class="gallery">
            <div class="gallery-item">
                <img src="https://example.com/dowel-package.jpg" alt="–£–ø–∞–∫–æ–≤–∫–∞ –¥—é–±–µ–ª–µ–π">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/dowel-closeup.jpg" alt="–ö—Ä—É–ø–Ω—ã–π –ø–ª–∞–Ω –¥—é–±–µ–ª—è">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/dowel-installed.jpg" alt="–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –¥—é–±–µ–ª—å">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/dowel-head.jpg" alt="–ì—Ä–∏–±–æ–≤–∏–¥–Ω–∞—è –≥–æ–ª–æ–≤–∫–∞">
            </div>
        </div>
        <?php
    }
    
    private function renderFooter() {
        ?>
        <footer>
            <p>¬© <?= date('Y') ?> –î—é–±–µ–ª—å —Å –≥—Ä–∏–±–æ–≤–∏–¥–Ω–æ–π –≥–æ–ª–æ–≤–∫–æ–π - –Ω–∞–¥–µ–∂–Ω–æ–µ –∫—Ä–µ–ø–ª–µ–Ω–∏–µ –¥–ª—è –ø–ª–æ—Ç–Ω—ã—Ö –æ—Å–Ω–æ–≤–∞–Ω–∏–π.</p>
        </footer>
</body>
</html>
        <?php
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
$dowelsPage = new MushroomDowelsProduct();
$dowelsPage->renderProductPage();
?>
<?php
/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ñ–æ—Å—Ñ–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–∞–º–æ—Ä–µ–∑–æ–≤ –ø–æ –¥–µ—Ä–µ–≤—É
 * 
 * 
 * 
 */

class PhosphatedScrewsProduct {
    private $productData;
    private $technicalSpecs;
    private $usageInfo;
    
    public function __construct() {
        $this->initializeProductData();
    }
    
    private function initializeProductData() {
        $this->productData = [
            'title' => '–°–∞–º–æ—Ä–µ–∑—ã –ø–æ –¥–µ—Ä–µ–≤—É —Ñ–æ—Å—Ñ–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ 4.2√ó75 –º–º',
            'description' => '–ü—Ä–æ—á–Ω—ã–µ –∫—Ä–µ–ø–µ–∂–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è —Å —Ñ–æ—Å—Ñ–∞—Ç–Ω—ã–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–π —Ñ–∏–∫—Å–∞—Ü–∏–∏ –¥–µ—Ä–µ–≤—è–Ω–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π. –ü–æ—Ç–∞–π–Ω–∞—è –≥–æ–ª–æ–≤–∫–∞ –∏ –æ—Å—Ç—Ä—ã–π –Ω–∞–∫–æ–Ω–µ—á–Ω–∏–∫ –¥–ª—è –ª–µ–≥–∫–æ–≥–æ –º–æ–Ω—Ç–∞–∂–∞.',
            'features' => [
                'type' => ['label' => '–¢–∏–ø', 'value' => '–°–∞–º–æ—Ä–µ–∑ –ø–æ –¥–µ—Ä–µ–≤—É', 'icon' => 'üî©'],
                'coating' => ['label' => '–ü–æ–∫—Ä—ã—Ç–∏–µ', 'value' => '–§–æ—Å—Ñ–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ', 'icon' => 'üõ°Ô∏è'],
                'size' => ['label' => '–†–∞–∑–º–µ—Ä', 'value' => '4.2√ó75 –º–º', 'icon' => 'üìè'],
                'head' => ['label' => '–ì–æ–ª–æ–≤–∫–∞', 'value' => '–ü–æ—Ç–∞–π–Ω–∞—è', 'icon' => '‚¨áÔ∏è'],
                'tip' => ['label' => '–ù–∞–∫–æ–Ω–µ—á–Ω–∏–∫', 'value' => '–û—Å—Ç—Ä—ã–π', 'icon' => '‚ö°'],
                'material' => ['label' => '–ú–∞—Ç–µ—Ä–∏–∞–ª', 'value' => '–°—Ç–∞–ª—å', 'icon' => 'üõ†Ô∏è'],
                'weight' => ['label' => '–í–µ—Å —É–ø–∞–∫–æ–≤–∫–∏', 'value' => '1 –∫–≥', 'icon' => 'üèãÔ∏è'],
                'mounting' => ['label' => '–ú–æ–Ω—Ç–∞–∂', 'value' => '–ë–µ–∑ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–≤–µ—Ä–ª–µ–Ω–∏—è', 'icon' => 'üöÄ']
            ],
            'advantages' => [
                '–®–∏—Ä–æ–∫–∞—è —Å—Ñ–µ—Ä–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è',
                '–ë—ã—Å—Ç—Ä—ã–π –∏ –ø—Ä–æ—Å—Ç–æ–π –º–æ–Ω—Ç–∞–∂',
                '–ù–∞–¥–µ–∂–Ω–∞—è —Ñ–∏–∫—Å–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤',
                '–£—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∫ –¥–µ—Ñ–æ—Ä–º–∞—Ü–∏–∏',
                '–ó–∞—â–∏—Ç–∞ –æ—Ç –∫–æ—Ä—Ä–æ–∑–∏–∏',
                '–ü—Ä–æ—á–Ω–æ—Å—Ç—å –∏ –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å',
                '–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ –º–∞—Ç–µ—Ä–∏–∞–ª',
                '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è'
            ],
            'dimensions' => [
                'diameter' => '4.2 –º–º',
                'length' => '75 –º–º',
                'thread_pitch' => '–ö—Ä—É–ø–Ω–∞—è —Ä–µ–∑—å–±–∞'
            ]
        ];
        
        $this->technicalSpecs = [
            'materials' => [
                '–û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ç–µ—Ä–∏–∞–ª' => '–£–≥–ª–µ—Ä–æ–¥–∏—Å—Ç–∞—è —Å—Ç–∞–ª—å',
                '–ü–æ–∫—Ä—ã—Ç–∏–µ' => '–§–æ—Å—Ñ–∞—Ç–Ω–æ–µ',
                '–¢–≤–µ—Ä–¥–æ—Å—Ç—å' => 'HRC 45-50'
            ],
            'performance' => [
                '–ú–∞–∫—Å. —Ç–æ–ª—â–∏–Ω–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è' => '–î–æ 50 –º–º',
                '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã' => '–î–µ—Ä–µ–≤–æ, –î–°–ü, —Ñ–∞–Ω–µ—Ä–∞',
                '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω' => '–û—Ç -50¬∞C –¥–æ +120¬∞C'
            ],
            'packaging' => [
                '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ —É–ø–∞–∫–æ–≤–∫–µ' => '~200 —à—Ç (–ø—Ä–∏ –≤–µ—Å–µ 1 –∫–≥)',
                '–í–∏–¥ —É–ø–∞–∫–æ–≤–∫–∏' => '–ü–ª–∞—Å—Ç–∏–∫–æ–≤–∞—è –∫–æ—Ä–æ–±–∫–∞',
                '–•—Ä–∞–Ω–µ–Ω–∏–µ' => '–í —Å—É—Ö–æ–º –ø–æ–º–µ—â–µ–Ω–∏–∏'
            ]
        ];
        
        $this->usageInfo = [
            'step1' => '–í—ã—Ä–æ–≤–Ω—è—Ç—å —Å–æ–µ–¥–∏–Ω—è–µ–º—ã–µ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏',
            'step2' => '–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–¥–µ–ª–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª—è—é—â–µ–µ –æ—Ç–≤–µ—Ä—Å—Ç–∏–µ (–¥–ª—è —Ç–≤–µ—Ä–¥—ã—Ö –ø–æ—Ä–æ–¥)',
            'step3' => '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∞–º–æ—Ä–µ–∑ –ø–æ–¥ –ø—Ä—è–º—ã–º —É–≥–ª–æ–º',
            'step4' => '–ó–∞–≤–µ—Ä–Ω—É—Ç—å —à—É—Ä—É–ø–æ–≤–µ—Ä—Ç–æ–º –∏–ª–∏ –æ—Ç–≤–µ—Ä—Ç–∫–æ–π –¥–æ —É—Ç–æ–ø–ª–µ–Ω–∏—è –≥–æ–ª–æ–≤–∫–∏',
            'tip' => '–î–ª—è –ª—É—á—à–µ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–æ—Å–∫ –∏–ª–∏ –º—ã–ª–æ',
            'warning' => '–ù–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å –¥–ª—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–µ—Å—É—â–∏—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π'
        ];
    }
    
    public function renderProductPage() {
        $this->renderHTMLHeader();
        $this->renderProductHeader();
        $this->renderFeaturesSection();
        $this->renderAdvantages();
        $this->renderTechnicalSpecs();
        $this->renderUsageInstructions();
        $this->renderGallerySection();
        $this->renderFooter();
    }
    
    private function renderHTMLHeader() {
        ?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="<?= htmlspecialchars($this->productData['description']) ?>">
    <title><?= htmlspecialchars($this->productData['title']) ?> | –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #37474f;
            --secondary-color: #546e7a;
            --accent-color: #b0bec5;
            --light-bg: #eceff1;
            --text-color: #263238;
            --muted-text: #546e7a;
        }
        
        body {
            font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            max-width: 1100px;
            margin: 0 auto;
            padding: 30px;
            background-color: #fff;
        }
        
        h1, h2, h3 {
            color: var(--primary-color);
            margin-top: 1.8em;
        }
        
        h1 {
            border-bottom: 2px solid var(--primary-color);
            padding-bottom: 15px;
            margin-bottom: 25px;
        }
        
        h2 {
            border-left: 5px solid var(--secondary-color);
            padding-left: 15px;
            margin: 35px 0 20px;
        }
        
        .feature-card {
            background-color: var(--light-bg);
            padding: 30px;
            border-radius: 12px;
            margin-bottom: 30px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 25px;
            margin-top: 25px;
        }
        
        .feature-item {
            display: flex;
            align-items: center;
            gap: 20px;
            padding: 15px;
            background-color: rgba(255,255,255,0.8);
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        
        .feature-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 12px rgba(0,0,0,0.1);
        }
        
        .feature-icon {
            font-size: 1.8em;
            color: var(--secondary-color);
            min-width: 40px;
            text-align: center;
        }
        
        .advantages-list {
            margin: 30px 0;
            padding-left: 0;
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 20px;
        }
        
        .advantages-list li {
            margin-bottom: 15px;
            position: relative;
            padding-left: 40px;
            list-style: none;
            font-size: 1.05em;
        }
        
        .advantages-list li:before {
            content: "‚Ä¢";
            color: var(--secondary-color);
            position: absolute;
            left: 0;
            font-weight: bold;
            font-size: 1.8em;
            line-height: 0.9;
        }
        
        .specs-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 25px;
            margin-top: 25px;
        }
        
        .specs-card {
            background-color: var(--light-bg);
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 3px 6px rgba(0,0,0,0.05);
        }
        
        .specs-card h3 {
            margin-top: 0;
            color: var(--secondary-color);
            border-bottom: 1px dashed var(--secondary-color);
            padding-bottom: 10px;
        }
        
        .specs-item {
            margin-bottom: 12px;
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
            border-bottom: 1px dotted var(--accent-color);
        }
        
        .specs-value {
            font-weight: bold;
            color: var(--primary-color);
            text-align: right;
        }
        
        .usage-steps {
            background-color: var(--light-bg);
            padding: 25px;
            border-radius: 10px;
            margin: 30px 0;
        }
        
        .usage-step {
            display: flex;
            gap: 15px;
            margin-bottom: 15px;
            align-items: center;
        }
        
        .step-number {
            background-color: var(--secondary-color);
            color: white;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
        }
        
        .tip-box {
            background-color: #e8f5e9;
            border-left: 5px solid #43a047;
            padding: 20px;
            border-radius: 0 8px 8px 0;
            margin: 20px 0;
        }
        
        .warning-box {
            background-color: #fff3e0;
            border-left: 5px solid #ffa000;
            padding: 20px;
            border-radius: 0 8px 8px 0;
            margin: 20px 0;
            font-weight: 500;
        }
        
        .dims-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
            margin: 30px 0;
        }
        
        .dim-card {
            background-color: var(--light-bg);
            padding: 20px;
            border-radius: 8px;
            text-align: center;
        }
        
        .dim-value {
            font-size: 1.3em;
            font-weight: bold;
            color: var(--primary-color);
            margin: 10px 0;
        }
        
        .gallery {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin: 40px 0;
        }
        
        .gallery-item {
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            position: relative;
            height: 200px;
            background-color: #f5f5f5;
        }
        
        .gallery-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s;
        }
        
        .gallery-item:hover img {
            transform: scale(1.05);
        }
        
        footer {
            margin-top: 60px;
            padding-top: 30px;
            border-top: 1px solid var(--accent-color);
            color: var(--muted-text);
            font-size: 0.95em;
            text-align: center;
        }
        
        @media (max-width: 768px) {
            .feature-grid, .advantages-list, .specs-grid, 
            .dims-grid, .gallery {
                grid-template-columns: 1fr;
            }
            
            body {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
        <?php
    }
    
    private function renderProductHeader() {
        ?>
        <h1><?= htmlspecialchars($this->productData['title']) ?></h1>
        <p style="font-size: 1.1em;"><?= htmlspecialchars($this->productData['description']) ?></p>
        <?php
    }
    
    private function renderFeaturesSection() {
        ?>
        <h2><i class="fas fa-info-circle"></i> –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h2>
        <div class="feature-card">
            <div class="feature-grid">
                <?php foreach ($this->productData['features'] as $feature): ?>
                <div class="feature-item">
                    <span class="feature-icon"><?= $feature['icon'] ?></span>
                    <div>
                        <strong><?= htmlspecialchars($feature['label']) ?>:</strong><br>
                        <?= htmlspecialchars($feature['value']) ?>
                    </div>
                </div>
                <?php endforeach; ?>
            </div>
            
            <h3 style="margin-top: 30px;"><i class="fas fa-ruler"></i> –ü–∞—Ä–∞–º–µ—Ç—Ä—ã</h3>
            <div class="dims-grid">
                <div class="dim-card">
                    <div>–î–∏–∞–º–µ—Ç—Ä</div>
                    <div class="dim-value"><?= htmlspecialchars($this->productData['dimensions']['diameter']) ?></div>
                </div>
                <div class="dim-card">
                    <div>–î–ª–∏–Ω–∞</div>
                    <div class="dim-value"><?= htmlspecialchars($this->productData['dimensions']['length']) ?></div>
                </div>
                <div class="dim-card">
                    <div>–†–µ–∑—å–±–∞</div>
                    <div class="dim-value"><?= htmlspecialchars($this->productData['dimensions']['thread_pitch']) ?></div>
                </div>
            </div>
        </div>
        <?php
    }
    
    private function renderAdvantages() {
        ?>
        <h2><i class="fas fa-check-circle"></i> –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</h2>
        <ul class="advantages-list">
            <?php foreach ($this->productData['advantages'] as $advantage): ?>
                <li><?= htmlspecialchars($advantage) ?></li>
            <?php endforeach; ?>
        </ul>
        <?php
    }
    
    private function renderTechnicalSpecs() {
        ?>
        <h2><i class="fas fa-clipboard-list"></i> –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h2>
        <div class="specs-grid">
            <div class="specs-card">
                <h3><i class="fas fa-flask"></i> –ú–∞—Ç–µ—Ä–∏–∞–ª—ã</h3>
                <?php foreach ($this->technicalSpecs['materials'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
            
            <div class="specs-card">
                <h3><i class="fas fa-tachometer-alt"></i> –≠–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è</h3>
                <?php foreach ($this->technicalSpecs['performance'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
            
            <div class="specs-card">
                <h3><i class="fas fa-box-open"></i> –£–ø–∞–∫–æ–≤–∫–∞</h3>
                <?php foreach ($this->technicalSpecs['packaging'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
        </div>
        <?php
    }
    
    private function renderUsageInstructions() {
        ?>
        <h2><i class="fas fa-tools"></i> –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é</h2>
        <div class="usage-steps">
            <?php foreach ($this->usageInfo as $key => $step): ?>
                <?php if(strpos($key, 'step') === 0): ?>
                <div class="usage-step">
                    <div class="step-number"><?= substr($key, 4) ?></div>
                    <div><?= htmlspecialchars($step) ?></div>
                </div>
                <?php endif; ?>
            <?php endforeach; ?>
        </div>
        
        <div class="tip-box">
            <i class="fas fa-lightbulb"></i> 
            <?= htmlspecialchars($this->usageInfo['tip']) ?>
        </div>
        
        <div class="warning-box">
            <i class="fas fa-exclamation-triangle"></i> 
            <?= htmlspecialchars($this->usageInfo['warning']) ?>
        </div>
        <?php
    }
    
    private function renderGallerySection() {
        ?>
        <h2><i class="fas fa-images"></i> –ì–∞–ª–µ—Ä–µ—è</h2>
        <div class="gallery">
            <div class="gallery-item">
                <img src="https://example.com/screws-package.jpg" alt="–£–ø–∞–∫–æ–≤–∫–∞ —Å–∞–º–æ—Ä–µ–∑–æ–≤">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/screw-closeup.jpg" alt="–ö—Ä—É–ø–Ω—ã–π –ø–ª–∞–Ω —Å–∞–º–æ—Ä–µ–∑–∞">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/screw-installed.jpg" alt="–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–∞–º–æ—Ä–µ–∑">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/screw-head.jpg" alt="–ü–æ—Ç–∞–π–Ω–∞—è –≥–æ–ª–æ–≤–∫–∞">
            </div>
        </div>
        <?php
    }
    
    private function renderFooter() {
        ?>
        <footer>
            <p>¬© <?= date('Y') ?> –§–æ—Å—Ñ–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∞–º–æ—Ä–µ–∑—ã –ø–æ –¥–µ—Ä–µ–≤—É - –Ω–∞–¥–µ–∂–Ω–æ–µ –∫—Ä–µ–ø–ª–µ–Ω–∏–µ –¥–ª—è –¥–µ—Ä–µ–≤—è–Ω–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π.</p>
        </footer>
</body>
</html>
        <?php
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
$screwsPage = new PhosphatedScrewsProduct();
$screwsPage->renderProductPage();
?>
<?php
/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å—É–ø–µ—Ä–∫–ª–µ—è Akfix 705
 * 
 * 
 * 
 */

class SuperGlueProduct {
    private $productData;
    private $technicalSpecs;
    private $safetyInfo;
    
    public function __construct() {
        $this->initializeProductData();
    }
    
    private function initializeProductData() {
        $this->productData = [
            'title' => '–°—É–ø–µ—Ä–∫–ª–µ–π Akfix 705 (–¢—É—Ä—Ü–∏—è)',
            'description' => '–î–≤—É—Ö–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω—ã–π —Ü–∏–∞–Ω–æ–∞–∫—Ä–∏–ª–∞—Ç–Ω—ã–π –∫–ª–µ–π-–≥–µ–ª—å –≤—ã—Å–æ–∫–æ–π –≤—è–∑–∫–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–æ—á–Ω–æ–≥–æ —Å–∫–ª–µ–∏–≤–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.',
            'features' => [
                'type' => ['label' => '–¢–∏–ø', 'value' => '–î–≤—É—Ö–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω—ã–π —Ü–∏–∞–Ω–æ–∞–∫—Ä–∏–ª–∞—Ç–Ω—ã–π', 'icon' => 'üß™'],
                'viscosity' => ['label' => '–ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ü–∏—è', 'value' => '–í—è–∑–∫–∏–π –≥–µ–ª—å', 'icon' => 'üåÄ'],
                'color' => ['label' => '–¶–≤–µ—Ç', 'value' => '–ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π', 'icon' => 'üîç'],
                'components' => ['label' => '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã', 'value' => '–ö–ª–µ–π + –∞–∫—Ç–∏–≤–∞—Ç–æ—Ä', 'icon' => '‚öóÔ∏è'],
                'package' => ['label' => '–£–ø–∞–∫–æ–≤–∫–∞', 'value' => '–ö–ª–µ–π (65 –≥) + –∞—ç—Ä–æ–∑–æ–ª—å (200 –º–ª)', 'icon' => 'üì¶'],
                'drying' => ['label' => '–°—Ö–≤–∞—Ç—ã–≤–∞–Ω–∏–µ', 'value' => '–ë—ã—Å—Ç—Ä–æ–µ', 'icon' => '‚è±Ô∏è'],
                'materials' => ['label' => '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', 'value' => '–î–µ—Ä–µ–≤–æ, –ø–ª–∞—Å—Ç–∏–∫, –∫–æ–∂–∞, –±—É–º–∞–≥–∞', 'icon' => 'üõ†Ô∏è']
            ],
            'advantages' => [
                '–í—ã—Å–æ–∫–∞—è –ø—Ä–æ—á–Ω–æ—Å—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è',
                '–ë—ã—Å—Ç—Ä–æ–µ —Å—Ö–≤–∞—Ç—ã–≤–∞–Ω–∏–µ',
                '–í—è–∑–∫–∞—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ü–∏—è –Ω–µ —Å—Ç–µ–∫–∞–µ—Ç',
                '–í–ª–∞–≥–æ- –∏ –º–æ—Ä–æ–∑–æ—Å—Ç–æ–π–∫–æ—Å—Ç—å',
                '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ',
                '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–µ–Ω –¥–ª—è –ø–æ—Ä–∏—Å—Ç—ã—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π',
                '–ö–æ–º–ø–ª–µ–∫—Ç –∏–∑ –¥–≤—É—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤',
                '–£–¥–æ–±–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞'
            ],
            'properties' => [
                '–ü—Ä–æ—á–Ω–æ—Å—Ç—å —Å–∫–ª–µ–∏–≤–∞–Ω–∏—è' => '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è',
                '–í—Ä–µ–º—è —Å—Ö–≤–∞—Ç—ã–≤–∞–Ω–∏—è' => '–û—Ç 30 —Å–µ–∫—É–Ω–¥',
                '–ü–æ–ª–Ω–æ–µ –æ—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ' => '24 —á–∞—Å–∞',
                '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–π —Ä–µ–∂–∏–º' => '–û—Ç -30¬∞C –¥–æ +80¬∞C'
            ]
        ];
        
        $this->technicalSpecs = [
            'composition' => [
                '–û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç' => '–¶–∏–∞–Ω–æ–∞–∫—Ä–∏–ª–∞—Ç–Ω—ã–π –≥–µ–ª—å',
                '–ê–∫—Ç–∏–≤–∞—Ç–æ—Ä' => '–ê—ç—Ä–æ–∑–æ–ª—å–Ω—ã–π —Å–æ—Å—Ç–∞–≤',
                '–î–æ–±–∞–≤–∫–∏' => '–°—Ç–∞–±–∏–ª–∏–∑–∞—Ç–æ—Ä—ã, –∑–∞–≥—É—Å—Ç–∏—Ç–µ–ª–∏'
            ],
            'application' => [
                '–¢–æ–ª—â–∏–Ω–∞ —Å–ª–æ—è' => '0,1-0,3 –º–º',
                '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞' => '+15¬∞C –¥–æ +25¬∞C',
                '–°—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è' => '12 –º–µ—Å—è—Ü–µ–≤',
                '–†–∞—Å—Ö–æ–¥' => '~10 –º/–ø –Ω–∞ 50 –≥'
            ],
            'compatibility' => [
                '–î–µ—Ä–µ–≤–æ' => '–û—Ç–ª–∏—á–Ω–æ',
                '–ü–ª–∞—Å—Ç–∏–∫–∏' => '–•–æ—Ä–æ—à–æ (–∫—Ä–æ–º–µ PE, PP)',
                '–ö–æ–∂–∞' => '–û—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ',
                '–ú–µ—Ç–∞–ª–ª—ã' => '–¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–∞–π–º–µ—Ä'
            ]
        ];
        
        $this->safetyInfo = [
            'warning' => '–°–æ—Å—Ç–∞–≤ –≥–æ—Ä—é—á–∏–π, –æ–±–ª–∞–¥–∞–µ—Ç —Å–∏–ª—å–Ω—ã–º –∑–∞–ø–∞—Ö–æ–º',
            'precautions' => [
                '–û–±–µ—Å–ø–µ—á—å—Ç–µ —Ö–æ—Ä–æ—à—É—é –≤–µ–Ω—Ç–∏–ª—è—Ü–∏—é',
                '–ò–∑–±–µ–≥–∞–π—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å –∫–æ–∂–µ–π –∏ –≥–ª–∞–∑–∞–º–∏',
                '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä—á–∞—Ç–∫–∏ –∏ –æ—á–∫–∏',
                '–•—Ä–∞–Ω–∏—Ç–µ –≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ–º –¥–ª—è –¥–µ—Ç–µ–π –º–µ—Å—Ç–µ'
            ],
            'first_aid' => [
                '–ü—Ä–∏ –ø–æ–ø–∞–¥–∞–Ω–∏–∏ –≤ –≥–ª–∞–∑–∞' => '–ü—Ä–æ–º—ã—Ç—å –≤–æ–¥–æ–π 15 –º–∏–Ω, –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É',
                '–ù–∞ –∫–æ–∂–µ' => '–ü—Ä–æ–º—ã—Ç—å —Å –º—ã–ª–æ–º, –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞—Å—Ç–≤–æ—Ä–∏—Ç–µ–ª–∏',
                '–ü—Ä–æ–≥–ª–∞—Ç—ã–≤–∞–Ω–∏–µ' => '–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∫ –≤—Ä–∞—á—É'
            ]
        ];
    }
    
    public function renderProductPage() {
        $this->renderHTMLHeader();
        $this->renderProductHeader();
        $this->renderFeaturesSection();
        $this->renderProperties();
        $this->renderAdvantages();
        $this->renderTechnicalSpecs();
        $this->renderSafetyInfo();
        $this->renderGallerySection();
        $this->renderFooter();
    }
    
    private function renderHTMLHeader() {
        ?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="<?= htmlspecialchars($this->productData['description']) ?>">
    <title><?= htmlspecialchars($this->productData['title']) ?> | –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #006064;
            --secondary-color: #00838f;
            --accent-color: #b2ebf2;
            --light-bg: #e0f7fa;
            --text-color: #004d40;
            --muted-text: #00796b;
        }
        
        body {
            font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            max-width: 1100px;
            margin: 0 auto;
            padding: 30px;
            background-color: #fff;
        }
        
        h1, h2, h3 {
            color: var(--primary-color);
            margin-top: 1.8em;
        }
        
        h1 {
            border-bottom: 2px solid var(--primary-color);
            padding-bottom: 15px;
            margin-bottom: 25px;
        }
        
        h2 {
            border-left: 5px solid var(--secondary-color);
            padding-left: 15px;
            margin: 35px 0 20px;
        }
        
        .feature-card {
            background-color: var(--light-bg);
            padding: 30px;
            border-radius: 12px;
            margin-bottom: 30px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 25px;
            margin-top: 25px;
        }
        
        .feature-item {
            display: flex;
            align-items: center;
            gap: 20px;
            padding: 15px;
            background-color: rgba(255,255,255,0.8);
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        
        .feature-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 12px rgba(0,0,0,0.1);
        }
        
        .feature-icon {
            font-size: 1.8em;
            color: var(--secondary-color);
            min-width: 40px;
            text-align: center;
        }
        
        .props-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin: 30px 0;
        }
        
        .prop-card {
            background-color: var(--light-bg);
            padding: 20px;
            border-radius: 8px;
            text-align: center;
        }
        
        .prop-value {
            font-size: 1.3em;
            font-weight: bold;
            color: var(--primary-color);
            margin: 10px 0;
        }
        
        .advantages-list {
            margin: 30px 0;
            padding-left: 0;
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 20px;
        }
        
        .advantages-list li {
            margin-bottom: 15px;
            position: relative;
            padding-left: 40px;
            list-style: none;
            font-size: 1.05em;
        }
        
        .advantages-list li:before {
            content: "‚úì";
            color: var(--secondary-color);
            position: absolute;
            left: 0;
            font-weight: bold;
            font-size: 1.5em;
        }
        
        .specs-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 25px;
            margin-top: 25px;
        }
        
        .specs-card {
            background-color: var(--light-bg);
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 3px 6px rgba(0,0,0,0.05);
        }
        
        .specs-card h3 {
            margin-top: 0;
            color: var(--secondary-color);
            border-bottom: 1px dashed var(--secondary-color);
            padding-bottom: 10px;
        }

        .specs-item {
            margin-bottom: 12px;
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
            border-bottom: 1px dotted var(--accent-color);
        }
        
        .specs-value {
            font-weight: bold;
            color: var(--primary-color);
            text-align: right;
        }
        
        .safety-card {
            background-color: #ffebee;
            padding: 25px;
            border-radius: 10px;
            margin: 30px 0;
            border-left: 5px solid #c62828;
        }
        
        .precaution-item {
            display: flex;
            gap: 15px;
            margin-bottom: 15px;
            align-items: flex-start;
        }
        
        .precaution-icon {
            color: #c62828;
            font-size: 1.2em;
            margin-top: 3px;
        }
        
        .first-aid-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .aid-card {
            background-color: #fff3e0;
            padding: 20px;
            border-radius: 8px;
            border-left: 5px solid #ff8f00;
        }
        
        .gallery {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin: 40px 0;
        }
        
        .gallery-item {
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            position: relative;
            height: 200px;
            background-color: #f5f5f5;
        }
        
        .gallery-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s;
        }
        
        .gallery-item:hover img {
            transform: scale(1.05);
        }
        
        footer {
            margin-top: 60px;
            padding-top: 30px;
            border-top: 1px solid var(--accent-color);
            color: var(--muted-text);
            font-size: 0.95em;
            text-align: center;
        }
        
        @media (max-width: 768px) {
            .feature-grid, .props-grid, .advantages-list, 
            .specs-grid, .first-aid-grid, .gallery {
                grid-template-columns: 1fr;
            }
            
            body {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
        <?php
    }
    
    private function renderProductHeader() {
        ?>
        <h1><?= htmlspecialchars($this->productData['title']) ?></h1>
        <p style="font-size: 1.1em;"><?= htmlspecialchars($this->productData['description']) ?></p>
        <?php
    }
    
    private function renderFeaturesSection() {
        ?>
        <h2><i class="fas fa-info-circle"></i> –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h2>
        <div class="feature-card">
            <div class="feature-grid">
                <?php foreach ($this->productData['features'] as $feature): ?>
                <div class="feature-item">
                    <span class="feature-icon"><?= $feature['icon'] ?></span>
                    <div>
                        <strong><?= htmlspecialchars($feature['label']) ?>:</strong><br>
                        <?= htmlspecialchars($feature['value']) ?>
                    </div>
                </div>
                <?php endforeach; ?>
            </div>
        </div>
        <?php
    }
    
    private function renderProperties() {
        ?>
        <h2><i class="fas fa-flask"></i> –°–≤–æ–π—Å—Ç–≤–∞ –∫–ª–µ—è</h2>
        <div class="props-grid">
            <?php foreach ($this->productData['properties'] as $prop => $value): ?>
            <div class="prop-card">
                <div><?= htmlspecialchars($prop) ?></div>
                <div class="prop-value"><?= htmlspecialchars($value) ?></div>
            </div>
            <?php endforeach; ?>
        </div>
        <?php
    }
    
    private function renderAdvantages() {
        ?>
        <h2><i class="fas fa-check-double"></i> –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</h2>
        <ul class="advantages-list">
            <?php foreach ($this->productData['advantages'] as $advantage): ?>
                <li><?= htmlspecialchars($advantage) ?></li>
            <?php endforeach; ?>
        </ul>
        <?php
    }
    
    private function renderTechnicalSpecs() {
        ?>
        <h2><i class="fas fa-clipboard-list"></i> –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h2>
        <div class="specs-grid">
            <div class="specs-card">
                <h3><i class="fas fa-atom"></i> –°–æ—Å—Ç–∞–≤</h3>
                <?php foreach ($this->technicalSpecs['composition'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
            
            <div class="specs-card">
                <h3><i class="fas fa-tools"></i> –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ</h3>
                <?php foreach ($this->technicalSpecs['application'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
            
            <div class="specs-card">
                <h3><i class="fas fa-thumbs-up"></i> –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å</h3>
                <?php foreach ($this->technicalSpecs['compatibility'] as $param => $value): ?>
                    <div class="specs-item">
                        <span><?= htmlspecialchars($param) ?>:</span>
                        <span class="specs-value"><?= htmlspecialchars($value) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
        </div>
        <?php
    }
    
    private function renderSafetyInfo() {
        ?>
        <h2><i class="fas fa-exclamation-triangle"></i> –ú–µ—Ä—ã –ø—Ä–µ–¥–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç–∏</h2>
        <div class="safety-card">
            <h3 style="color: #c62828; margin-top: 0;"><?= htmlspecialchars($this->safetyInfo['warning']) ?></h3>
            
            <h4>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:</h4>
            <?php foreach ($this->safetyInfo['precautions'] as $precaution): ?>
            <div class="precaution-item">
                <div class="precaution-icon"><i class="fas fa-shield-alt"></i></div>
                <div><?= htmlspecialchars($precaution) ?></div>
            </div>
            <?php endforeach; ?>
            
            <h4 style="margin-top: 20px;">–ü–µ—Ä–≤–∞—è –ø–æ–º–æ—â—å:</h4>
            <div class="first-aid-grid">
                <?php foreach ($this->safetyInfo['first_aid'] as $case => $action): ?>
                <div class="aid-card">
                    <strong><?= htmlspecialchars($case) ?>:</strong>
                    <p><?= htmlspecialchars($action) ?></p>
                </div>
                <?php endforeach; ?>
            </div>
        </div>
        <?php
    }
    
    private function renderGallerySection() {
        ?>
        <h2><i class="fas fa-images"></i> –ì–∞–ª–µ—Ä–µ—è</h2>
        <div class="gallery">
            <div class="gallery-item">
                <img src="https://example.com/akfix-package.jpg" alt="–£–ø–∞–∫–æ–≤–∫–∞ –∫–ª–µ—è Akfix 705">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/akfix-components.jpg" alt="–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∫–ª–µ—è">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/akfix-application.jpg" alt="–ü—Ä–æ—Ü–µ—Å—Å –Ω–∞–Ω–µ—Å–µ–Ω–∏—è">
            </div>
            <div class="gallery-item">
                <img src="https://example.com/akfix-result.jpg" alt="–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∫–ª–µ–∏–≤–∞–Ω–∏—è">
            </div>
        </div>
        <?php
    }
    
    private function renderFooter() {
        ?>
        <footer>
            <p>¬© <?= date('Y') ?> –°—É–ø–µ—Ä–∫–ª–µ–π Akfix 705 - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ—á–Ω–æ–≥–æ —Å–∫–ª–µ–∏–≤–∞–Ω–∏—è.</p>
        </footer>
</body>
</html>
        <?php
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
$gluePage = new SuperGlueProduct();
$gluePage->renderProductPage();
?>
<?php
/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –±—ã—Å—Ç—Ä–æ—Ç–≤–µ—Ä–¥–µ—é—â–µ–≥–æ –Ω–∞–ª–∏–≤–Ω–æ–≥–æ –ø–æ–ª–∞ —Å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º
 * 
 * 
 *
 */

class FloorProduct {
    private $productData;
    private $technicalSpecs;
    private $applicationInfo;
    
    public function __construct() {
        $this->initializeProductData();
    }
    
    private function initializeProductData() {
        $this->productData = [
            'title' => '–ë—ã—Å—Ç—Ä–æ—Ç–≤–µ—Ä–¥–µ—é—â–∏–π –Ω–∞–ª–∏–≤–Ω–æ–π –ø–æ–ª –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è',
            'description' => '–í—ã—Å–æ–∫–æ–ø—Ä–æ—á–Ω–∞—è —Å–º–µ—Å—å –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è –±–µ—Ç–æ–Ω–Ω—ã—Ö –ø–æ–ª–æ–≤ –∏ —Ü–µ–º–µ–Ω—Ç–Ω—ã—Ö —Å—Ç—è–∂–µ–∫ —Å –∞—Ä–º–∏—Ä—É—é—â–∏–º–∏ –≤–æ–ª–æ–∫–Ω–∞–º–∏, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–∏—Å—Ç–µ–º "–¢—ë–ø–ª—ã–π –ø–æ–ª" –∏ "–ü–ª–∞–≤–∞—é—â–∏–π –ø–æ–ª".',
            'productCode' => 'NP-2023-F',
            'consumption' => 1.6, // –∫–≥/–º¬≤ –Ω–∞ 1 –º–º —Ç–æ–ª—â–∏–Ω—ã
            'bagWeight' => 20, // –∫–≥ –≤ –º–µ—à–∫–µ
            'features' => [
                'application' => ['label' => '–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ', 'value' => '–†—É—á–Ω–æ–µ –∏ –º–∞—à–∏–Ω–Ω–æ–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ', 'icon' => 'üõ†Ô∏è'],
                'layer' => ['label' => '–°–ª–æ–π –Ω–∞–Ω–µ—Å–µ–Ω–∏—è', 'value' => '3-100 –º–º', 'icon' => 'üìè'],
                'drying' => ['label' => '–•–æ–∂–¥–µ–Ω–∏–µ –ø–æ –ø–æ–ª—É', 'value' => '–ß–µ—Ä–µ–∑ 2 —á–∞—Å–∞', 'icon' => '‚è±Ô∏è'],
                'strength' => ['label' => '–ü—Ä–æ—á–Ω–æ—Å—Ç—å', 'value' => '200 –∫–≥/—Å–º¬≤', 'icon' => 'üí™'],
                'fibers' => ['label' => '–ê—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ', 'value' => '–£—Å–∏–ª–µ–Ω –≤–æ–ª–æ–∫–Ω–∞–º–∏', 'icon' => 'üîÑ'],
                'tiles' => ['label' => '–£–∫–ª–∞–¥–∫–∞ –ø–ª–∏—Ç–∫–∏', 'value' => '–ß–µ—Ä–µ–∑ 24 —á–∞—Å–∞', 'icon' => 'üß±'],
                'base' => ['label' => '–û—Å–Ω–æ–≤–∞–Ω–∏–µ', 'value' => '–ë–µ—Ç–æ–Ω, —Ü–µ–º–µ–Ω—Ç–Ω—ã–µ —Å—Ç—è–∂–∫–∏', 'icon' => 'üèóÔ∏è'],
                'systems' => ['label' => '–°–∏—Å—Ç–µ–º—ã', 'value' => '"–¢—ë–ø–ª—ã–π –ø–æ–ª", "–ü–ª–∞–≤–∞—é—â–∏–π –ø–æ–ª"', 'icon' => 'üî•']
            ],
            'advantages' => [
                '–ë—ã—Å—Ç—Ä–æ–µ –≤—ã—Å—ã—Ö–∞–Ω–∏–µ - —Ö–æ–∂–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞',
                '–í—ã—Å–æ–∫–∞—è –ø—Ä–æ—á–Ω–æ—Å—Ç—å –¥–æ 200 –∫–≥/—Å–º¬≤',
                '–ê—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–ª–æ–∫–Ω–∞–º–∏ –ø—Ä–æ—Ç–∏–≤ —Ç—Ä–µ—â–∏–Ω',
                '–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–∏—Å—Ç–µ–º "–¢—ë–ø–ª—ã–π –ø–æ–ª"',
                '–ú–æ–∂–Ω–æ –Ω–∞–Ω–æ—Å–∏—Ç—å —Å–ª–æ–µ–º –æ—Ç 3 –¥–æ 100 –º–º',
                '–î–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –Ω–∞–ø–æ–ª—å–Ω—ã—Ö –ø–æ–∫—Ä—ã—Ç–∏–π',
                '–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤ –ø–æ–º–µ—â–µ–Ω–∏—è—Ö —Å –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π –≤–ª–∞–∂–Ω–æ—Å—Ç—å—é',
                '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —É—Å–∞–¥–∫–∞ –ø—Ä–∏ –≤—ã—Å—ã—Ö–∞–Ω–∏–∏'
            ],
            'compatibility' => [
                '–õ–∏–Ω–æ–ª–µ—É–º', '–ö–æ–≤—Ä–æ–ª–∏–Ω', '–ö–µ—Ä–∞–º–∏—á–µ—Å–∫–∞—è –ø–ª–∏—Ç–∫–∞', 
                '–õ–∞–º–∏–Ω–∞—Ç', '–ü–∞—Ä–∫–µ—Ç', '–ü–∞—Ä–∫–µ—Ç–Ω–∞—è –¥–æ—Å–∫–∞'
            ]
        ];
        
        $this->technicalSpecs = [
            'composition' => [
                '–û—Å–Ω–æ–≤–∞' => '–¶–µ–º–µ–Ω—Ç–Ω–∞—è',
                '–ù–∞–ø–æ–ª–Ω–∏—Ç–µ–ª–∏' => '–ú–∏–Ω–µ—Ä–∞–ª—å–Ω—ã–µ',
                '–ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã' => '–ü–æ–ª–∏–º–µ—Ä–Ω—ã–µ',
                '–ê—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ' => '–§–∏–±—Ä–∞'
            ],
            'performance' => [
                '–ü—Ä–æ—á–Ω–æ—Å—Ç—å –Ω–∞ —Å–∂–∞—Ç–∏–µ' => '200 –∫–≥/—Å–º¬≤',
                '–ê–¥–≥–µ–∑–∏—è –∫ –±–µ—Ç–æ–Ω—É' => '‚â•1 –ú–ü–∞',
                '–†–∞—Å—Ö–æ–¥' => '1.6 –∫–≥/–º¬≤ –Ω–∞ 1 –º–º',
                '–ñ–∏–∑–Ω–µ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å' => '40 –º–∏–Ω—É—Ç',
                '–ì–∞—Ä–∞–Ω—Ç–∏—è' => '12 –º–µ—Å—è—Ü–µ–≤',
                '–°—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è' => '12 –º–µ—Å—è—Ü–µ–≤'
            ],
            'application' => [
                '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏—è' => '+5¬∞C –¥–æ +30¬∞C',
                '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞' => '+10¬∞C –¥–æ +25¬∞C',
                '–í–ª–∞–∂–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–∞–Ω–∏—è' => '–ù–µ –±–æ–ª–µ–µ 4%',
                '–í–æ–∑—Ä–∞—Å—Ç –æ—Å–Ω–æ–≤–∞–Ω–∏—è' => '–ù–µ –º–µ–Ω–µ–µ 28 —Å—É—Ç–æ–∫'
            ]
        ];
        
        $this->applicationInfo = [
            'step1' => '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –æ—Å–Ω–æ–≤–∞–Ω–∏–µ: –æ—á–∏—Å—Ç–∏—Ç—å, –æ–±–µ—Å–ø—ã–ª–∏—Ç—å, –∑–∞–≥—Ä—É–Ω—Ç–æ–≤–∞—Ç—å',
            'step2' => '–ü—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å —Ä–∞—Å—Ç–≤–æ—Ä —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
            'step3' => '–ù–∞–Ω–µ—Å—Ç–∏ —Å–º–µ—Å—å, –Ω–∞—á–∏–Ω–∞—è —Å –¥–∞–ª—å–Ω–µ–≥–æ —É–≥–ª–∞ –ø–æ–º–µ—â–µ–Ω–∏—è',
            'step4' => '–†–∞–∑—Ä–æ–≤–Ω—è—Ç—å —Å–º–µ—Å—å –∑—É–±—á–∞—Ç—ã–º —à–ø–∞—Ç–µ–ª–µ–º –∏–ª–∏ —Ä–∞–∫–ª–µ–π',
            'step5' => '–ü—Ä–æ–∫–∞—Ç–∞—Ç—å –∏–≥–æ–ª—å—á–∞—Ç—ã–º –≤–∞–ª–∏–∫–æ–º –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—É–∑—ã—Ä—å–∫–æ–≤ –≤–æ–∑–¥—É—Ö–∞',
            'step6' => '–í—ã–¥–µ—Ä–∂–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –≤—Ä–µ–º—è –¥–æ –ø–æ–ª–Ω–æ–≥–æ –≤—ã—Å—ã—Ö–∞–Ω–∏—è',
            'tip' => '–î–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥—Ä—É–Ω—Ç–æ–≤–∫—É –≥–ª—É–±–æ–∫–æ–≥–æ –ø—Ä–æ–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è',
            'warning' => '–ù–µ –¥–æ–ø—É—Å–∫–∞–π—Ç–µ —Å–∫–≤–æ–∑–Ω—è–∫–æ–≤ –∏ –ø—Ä—è–º–æ–≥–æ —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ —Å–≤–µ—Ç–∞ –≤ –ø–µ—Ä–≤—ã–µ 24 —á–∞—Å–∞'
        ];
    }
    
    public function renderProductPage() {
        $this->renderHTMLHeader();
        $this->renderProductHeader();
        $this->renderCalculatorSection(); // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
        $this->renderFeaturesSection();
        $this->renderAdvantages();
        $this->renderTechnicalSpecs();
        $this->renderApplication();
        $this->renderCompatibility();
        $this->renderGallerySection();
        $this->renderFooter();
    }

    private function renderCalculatorSection() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
        $length = isset($_POST['length']) ? (float)$_POST['length'] : 0;
        $width = isset($_POST['width']) ? (float)$_POST['width'] : 0;
        $thickness = isset($_POST['thickness']) ? (float)$_POST['thickness'] : 10;
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        if ($length < 0.1) $length = 0;
        if ($width < 0.1) $width = 0;
        if ($thickness < 3) $thickness = 3;
        if ($thickness > 100) $thickness = 100;
        
        $showResults = false;
        $area = 0;
        $totalConsumption = 0;
        $bagsNeeded = 0;
        
        if ($_SERVER['REQUEST_METHOD'] === 'POST' && $length > 0 && $width > 0) {
            $showResults = true;
            $area = $length * $width;
            $totalConsumption = $area * $thickness * $this->productData['consumption'];
            $bagsNeeded = ceil($totalConsumption / $this->productData['bagWeight']);
        }
        ?>
        <h2><i class="fas fa-calculator"></i> –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∞—Å—Ö–æ–¥–∞</h2>
        <div class="calculator-card">
            <form method="post" class="calculator-form">
                <div class="calculator-grid">
                    <div class="calculator-input">
                        <label for="length">–î–ª–∏–Ω–∞ –ø–æ–º–µ—â–µ–Ω–∏—è (–º):</label>
                        <input type="number" step="0.1" min="0.1" id="length" name="length" 
                               value="<?= htmlspecialchars($length > 0 ? $length : '') ?>" required>
                    </div>
                    
                    <div class="calculator-input">
                        <label for="width">–®–∏—Ä–∏–Ω–∞ –ø–æ–º–µ—â–µ–Ω–∏—è (–º):</label>
                        <input type="number" step="0.1" min="0.1" id="width" name="width" 
                               value="<?= htmlspecialchars($width > 0 ? $width : '') ?>" required>
                    </div>
                    
                    <div class="calculator-input">
                        <label for="thickness">–¢–æ–ª—â–∏–Ω–∞ —Å–ª–æ—è (–º–º):</label>
                        <input type="number" step="1" min="3" max="100" id="thickness" name="thickness" 
                               value="<?= htmlspecialchars($thickness) ?>" required>
                    </div>
                    
                    <div class="calculator-submit">
                        <button type="submit">–†–∞—Å—Å—á–∏—Ç–∞—Ç—å</button>
                    </div>
                </div>
            </form>
            
            <?php if ($showResults): ?>
            <div class="calculator-results">
                <h3>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞:</h3>
                <div class="result-item">
                    <span>–ü–ª–æ—â–∞–¥—å –ø–æ–º–µ—â–µ–Ω–∏—è:</span>
                    <strong><?= round($area, 2) ?> –º¬≤</strong>
                </div>
                <div class="result-item">
                    <span>–ù–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–º–µ—Å–∏:</span>
                    <strong><?= round($totalConsumption, 1) ?> –∫–≥</strong>
                </div>
                <div class="result-item">
                    <span>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—à–∫–æ–≤ –ø–æ <?= $this->productData['bagWeight'] ?> –∫–≥:</span>
                    <strong><?= $bagsNeeded ?> —à—Ç.</strong>
                </div>
                <div class="result-note">
                    <i class="fas fa-info-circle"></i> –†–∞—Å—Ö–æ–¥ —É–∫–∞–∑–∞–Ω –∏–∑ —Ä–∞—Å—á–µ—Ç–∞ <?= $this->productData['consumption'] ?> –∫–≥/–º¬≤ –Ω–∞ 1 –º–º —Ç–æ–ª—â–∏–Ω—ã
                </div>
            </div>
            <?php endif; ?>
        </div>
        <?php
    }

    private function renderHTMLHeader() {
        ?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="<?= htmlspecialchars($this->productData['description']) ?>">
    <title><?= htmlspecialchars($this->productData['title']) ?> | –û–ø–∏—Å–∞–Ω–∏–µ</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #5d4037;
            --secondary-color: #8d6e63;
            --accent-color: #d7ccc8;
            --light-bg: #efebe9;
            --text-color: #3e2723;
            --muted-text: #6d4c41;
        }
        
        body {
            font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            max-width: 1100px;
            margin: 0 auto;
            padding: 30px;
            background-color: #fff;
        }
        
        h1, h2, h3 {
            color: var(--primary-color);
            margin-top: 1.8em;
        }
        
        h1 {
            border-bottom: 2px solid var(--primary-color);
            padding-bottom: 15px;
            margin-bottom: 25px;
        }
        
        h2 {
            border-left: 5px solid var(--secondary-color);
            padding-left: 15px;
            margin: 35px 0 20px;
        }
        
        .product-code {
            background-color: var(--light-bg);
            display: inline-block;
            padding: 5px 10px;
            border-radius: 4px;
            font-size: 0.9em;
            color: var(--muted-text);
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ */
        .calculator-card {
            background-color: var(--light-bg);
            padding: 30px;
            border-radius: 12px;
            margin-bottom: 30px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .calculator-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 22px;
        }
        
        .calculator-input {
            display: flex;
            flex-direction: column;
        }
        
        .calculator-input label {
            margin-bottom: 8px;
            font-weight: 501;
        }
        
        .calculator-input input {
            padding: 12px;
            border: 1px solid var(--accent-color);
            border-radius: 6px;
            font-size: 1em;
        }
        
        .calculator-submit button {
            background-color: var(--secondary-color);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 1em;
            transition: background-color 0.3s;
            align-self: flex-end;
        }
        
        .calculator-submit button:hover {
            background-color: var(--primary-color);
        }
        
        .calculator-results {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
        }
        
        .result-item {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid var(--accent-color);
        }
        
        .result-item strong {
            color: var(--primary-color);
        }
        
        .result-note {
            margin-top: 15px;
            font-size: 0.9em;
            color: var(--muted-text);
        }
        
        /* –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π */
        .feature-card {
            background-color: var(--light-bg);
            padding: 30px;
            border-radius: 12px;
            margin-bottom: 30px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 25px;
            margin-top: 25px;
        }
        
        .feature-item {
            display: flex;
            align-items: center;
            gap: 20px;
            padding: 15px;
            background-color: rgba(255,255,255,0.9);
            border-radius: 8px;
            transition: all 0.3s ease;
        }
